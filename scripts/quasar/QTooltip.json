{
  "mixins": [
    {
      "props": {
        "model-value": {
          "type": [
            "Boolean",
            "null"
          ],
          "desc": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'update:model-value' event) OR use v-model directive",
          "default": "null",
          "category": "model",
          "examples": [
            "# v-model=\"state\""
          ]
        },
        "max-height": {
          "extends": "size",
          "type": [
            "String",
            "null"
          ],
          "default": "null",
          "desc": "The maximum height of the Tooltip; Size in CSS units, including unit name",
          "category": "content"
        },
        "max-width": {
          "extends": "size",
          "type": [
            "String",
            "null"
          ],
          "default": "null",
          "desc": "The maximum width of the Tooltip; Size in CSS units, including unit name",
          "category": "content"
        },
        "transition-show": {
          "default": "'jump-down'"
        },
        "transition-hide": {
          "default": "'jump-up'"
        },
        "anchor": {
          "type": "String",
          "desc": "Two values setting the starting position or anchor point of the Tooltip relative to its target",
          "values": [
            "'top left'",
            "'top middle'",
            "'top right'",
            "'top start'",
            "'top end'",
            "'center left'",
            "'center middle'",
            "'center right'",
            "'center start'",
            "'center end'",
            "'bottom left'",
            "'bottom middle'",
            "'bottom right'",
            "'bottom start'",
            "'bottom end'"
          ],
          "default": "'bottom middle'",
          "category": "position"
        },
        "self": {
          "type": "String",
          "desc": "Two values setting the Tooltip's own position relative to its target",
          "values": [
            "'top left'",
            "'top middle'",
            "'top right'",
            "'top start'",
            "'top end'",
            "'center left'",
            "'center middle'",
            "'center right'",
            "'center start'",
            "'center end'",
            "'bottom left'",
            "'bottom middle'",
            "'bottom right'",
            "'bottom start'",
            "'bottom end'"
          ],
          "default": "'top middle'",
          "category": "position"
        },
        "offset": {
          "type": "Array",
          "desc": "An array of two numbers to offset the Tooltip horizontally and vertically in pixels",
          "default": "[ 14, 14 ]",
          "examples": [
            "[ 8, 8 ]",
            "[ 5, 10 ]"
          ],
          "category": "position"
        },
        "scroll-target": {
          "extends": "scroll-target"
        },
        "delay": {
          "type": "Number",
          "desc": "Configure Tooltip to appear with delay",
          "default": "0",
          "category": "behavior"
        },
        "hide-delay": {
          "type": "Number",
          "desc": "Configure Tooltip to disappear with delay",
          "default": "0",
          "category": "behavior"
        },
        "persistent": {
          "type": "Boolean",
          "desc": "Prevents Tooltip from auto-closing when app's route changes",
          "category": "behavior"
        }
      },
      "events": {
        "update:model-value": {
          "desc": "Emitted when showing/hidden state changes; Is also used by v-model",
          "params": {
            "value": {
              "type": "Boolean",
              "desc": "New state (showing/hidden)"
            }
          }
        },
        "show": {
          "extends": "show"
        },
        "before-show": {
          "extends": "before-show"
        },
        "hide": {
          "extends": "hide"
        },
        "before-hide": {
          "extends": "before-hide"
        }
      },
      "methods": {
        "show": {
          "extends": "show"
        },
        "hide": {
          "extends": "hide"
        },
        "toggle": {
          "extends": "toggle"
        },
        "updatePosition": {
          "desc": "There are some custom scenarios for which Quasar cannot automatically reposition the tooltip without significant performance drawbacks so the optimal solution is for you to call this method when you need it",
          "params": null,
          "returns": null
        }
      }
    },
    {
      "props": {
        "target": {
          "type": [
            "Boolean",
            "String",
            "Element"
          ],
          "desc": "Configure a target element to trigger component toggle; 'true' means it enables the parent DOM element, 'false' means it disables attaching events to any DOM elements; By using a String (CSS selector) or a DOM element it attaches the events to the specified DOM element (if it exists)",
          "default": "true",
          "examples": [
            "false",
            ".my-parent",
            "#target-id",
            "$refs.target"
          ],
          "category": "behavior"
        },
        "no-parent-event": {
          "type": "Boolean",
          "desc": "Skips attaching events to the target DOM element (that trigger the element to get shown)",
          "category": "behavior"
        },
        "model-value": {
          "type": [
            "Boolean",
            "null"
          ],
          "desc": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'update:model-value' event) OR use v-model directive",
          "default": "null",
          "category": "model",
          "examples": [
            "# v-model=\"state\""
          ]
        },
        "max-height": {
          "extends": "size",
          "type": [
            "String",
            "null"
          ],
          "default": "null",
          "desc": "The maximum height of the Tooltip; Size in CSS units, including unit name",
          "category": "content"
        },
        "max-width": {
          "extends": "size",
          "type": [
            "String",
            "null"
          ],
          "default": "null",
          "desc": "The maximum width of the Tooltip; Size in CSS units, including unit name",
          "category": "content"
        },
        "transition-show": {
          "default": "'jump-down'"
        },
        "transition-hide": {
          "default": "'jump-up'"
        },
        "anchor": {
          "type": "String",
          "desc": "Two values setting the starting position or anchor point of the Tooltip relative to its target",
          "values": [
            "'top left'",
            "'top middle'",
            "'top right'",
            "'top start'",
            "'top end'",
            "'center left'",
            "'center middle'",
            "'center right'",
            "'center start'",
            "'center end'",
            "'bottom left'",
            "'bottom middle'",
            "'bottom right'",
            "'bottom start'",
            "'bottom end'"
          ],
          "default": "'bottom middle'",
          "category": "position"
        },
        "self": {
          "type": "String",
          "desc": "Two values setting the Tooltip's own position relative to its target",
          "values": [
            "'top left'",
            "'top middle'",
            "'top right'",
            "'top start'",
            "'top end'",
            "'center left'",
            "'center middle'",
            "'center right'",
            "'center start'",
            "'center end'",
            "'bottom left'",
            "'bottom middle'",
            "'bottom right'",
            "'bottom start'",
            "'bottom end'"
          ],
          "default": "'top middle'",
          "category": "position"
        },
        "offset": {
          "type": "Array",
          "desc": "An array of two numbers to offset the Tooltip horizontally and vertically in pixels",
          "default": "[ 14, 14 ]",
          "examples": [
            "[ 8, 8 ]",
            "[ 5, 10 ]"
          ],
          "category": "position"
        },
        "scroll-target": {
          "extends": "scroll-target"
        },
        "delay": {
          "type": "Number",
          "desc": "Configure Tooltip to appear with delay",
          "default": "0",
          "category": "behavior"
        },
        "hide-delay": {
          "type": "Number",
          "desc": "Configure Tooltip to disappear with delay",
          "default": "0",
          "category": "behavior"
        },
        "persistent": {
          "type": "Boolean",
          "desc": "Prevents Tooltip from auto-closing when app's route changes",
          "category": "behavior"
        }
      }
    },
    {
      "computedProps": {
        "contentEl": {
          "type": "Element",
          "desc": "The DOM Element of the rendered content",
          "addedIn": "v2.10.1"
        }
      }
    },
    {
      "props": {
        "transition-show": {
          "extends": "transition",
          "default": "'jump-down'"
        },
        "transition-hide": {
          "extends": "transition",
          "default": "'jump-up'"
        },
        "transition-duration": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "Transition duration (in milliseconds, without unit)",
          "default": "300",
          "category": "transition"
        },
        "target": {
          "type": [
            "Boolean",
            "String",
            "Element"
          ],
          "desc": "Configure a target element to trigger component toggle; 'true' means it enables the parent DOM element, 'false' means it disables attaching events to any DOM elements; By using a String (CSS selector) or a DOM element it attaches the events to the specified DOM element (if it exists)",
          "default": "true",
          "examples": [
            "false",
            ".my-parent",
            "#target-id",
            "$refs.target"
          ],
          "category": "behavior"
        },
        "no-parent-event": {
          "type": "Boolean",
          "desc": "Skips attaching events to the target DOM element (that trigger the element to get shown)",
          "category": "behavior"
        },
        "model-value": {
          "type": [
            "Boolean",
            "null"
          ],
          "desc": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'update:model-value' event) OR use v-model directive",
          "default": "null",
          "category": "model",
          "examples": [
            "# v-model=\"state\""
          ]
        },
        "max-height": {
          "extends": "size",
          "type": [
            "String",
            "null"
          ],
          "default": "null",
          "desc": "The maximum height of the Tooltip; Size in CSS units, including unit name",
          "category": "content"
        },
        "max-width": {
          "extends": "size",
          "type": [
            "String",
            "null"
          ],
          "default": "null",
          "desc": "The maximum width of the Tooltip; Size in CSS units, including unit name",
          "category": "content"
        },
        "anchor": {
          "type": "String",
          "desc": "Two values setting the starting position or anchor point of the Tooltip relative to its target",
          "values": [
            "'top left'",
            "'top middle'",
            "'top right'",
            "'top start'",
            "'top end'",
            "'center left'",
            "'center middle'",
            "'center right'",
            "'center start'",
            "'center end'",
            "'bottom left'",
            "'bottom middle'",
            "'bottom right'",
            "'bottom start'",
            "'bottom end'"
          ],
          "default": "'bottom middle'",
          "category": "position"
        },
        "self": {
          "type": "String",
          "desc": "Two values setting the Tooltip's own position relative to its target",
          "values": [
            "'top left'",
            "'top middle'",
            "'top right'",
            "'top start'",
            "'top end'",
            "'center left'",
            "'center middle'",
            "'center right'",
            "'center start'",
            "'center end'",
            "'bottom left'",
            "'bottom middle'",
            "'bottom right'",
            "'bottom start'",
            "'bottom end'"
          ],
          "default": "'top middle'",
          "category": "position"
        },
        "offset": {
          "type": "Array",
          "desc": "An array of two numbers to offset the Tooltip horizontally and vertically in pixels",
          "default": "[ 14, 14 ]",
          "examples": [
            "[ 8, 8 ]",
            "[ 5, 10 ]"
          ],
          "category": "position"
        },
        "scroll-target": {
          "extends": "scroll-target"
        },
        "delay": {
          "type": "Number",
          "desc": "Configure Tooltip to appear with delay",
          "default": "0",
          "category": "behavior"
        },
        "hide-delay": {
          "type": "Number",
          "desc": "Configure Tooltip to disappear with delay",
          "default": "0",
          "category": "behavior"
        },
        "persistent": {
          "type": "Boolean",
          "desc": "Prevents Tooltip from auto-closing when app's route changes",
          "category": "behavior"
        }
      }
    }
  ],
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/tooltip"
  },
  "props": {
    "transition-show": {
      "extends": "transition",
      "default": "'jump-down'"
    },
    "transition-hide": {
      "extends": "transition",
      "default": "'jump-up'"
    },
    "transition-duration": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Transition duration (in milliseconds, without unit)",
      "default": "300",
      "category": "transition"
    },
    "target": {
      "type": [
        "Boolean",
        "String",
        "Element"
      ],
      "desc": "Configure a target element to trigger component toggle; 'true' means it enables the parent DOM element, 'false' means it disables attaching events to any DOM elements; By using a String (CSS selector) or a DOM element it attaches the events to the specified DOM element (if it exists)",
      "default": "true",
      "examples": [
        "false",
        ".my-parent",
        "#target-id",
        "$refs.target"
      ],
      "category": "behavior"
    },
    "no-parent-event": {
      "type": "Boolean",
      "desc": "Skips attaching events to the target DOM element (that trigger the element to get shown)",
      "category": "behavior"
    },
    "model-value": {
      "type": [
        "Boolean",
        "null"
      ],
      "desc": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'update:model-value' event) OR use v-model directive",
      "default": "null",
      "category": "model",
      "examples": [
        "# v-model=\"state\""
      ]
    },
    "max-height": {
      "extends": "size",
      "type": [
        "String",
        "null"
      ],
      "default": "null",
      "desc": "The maximum height of the Tooltip; Size in CSS units, including unit name",
      "category": "content"
    },
    "max-width": {
      "extends": "size",
      "type": [
        "String",
        "null"
      ],
      "default": "null",
      "desc": "The maximum width of the Tooltip; Size in CSS units, including unit name",
      "category": "content"
    },
    "anchor": {
      "type": "String",
      "desc": "Two values setting the starting position or anchor point of the Tooltip relative to its target",
      "values": [
        "'top left'",
        "'top middle'",
        "'top right'",
        "'top start'",
        "'top end'",
        "'center left'",
        "'center middle'",
        "'center right'",
        "'center start'",
        "'center end'",
        "'bottom left'",
        "'bottom middle'",
        "'bottom right'",
        "'bottom start'",
        "'bottom end'"
      ],
      "default": "'bottom middle'",
      "category": "position"
    },
    "self": {
      "type": "String",
      "desc": "Two values setting the Tooltip's own position relative to its target",
      "values": [
        "'top left'",
        "'top middle'",
        "'top right'",
        "'top start'",
        "'top end'",
        "'center left'",
        "'center middle'",
        "'center right'",
        "'center start'",
        "'center end'",
        "'bottom left'",
        "'bottom middle'",
        "'bottom right'",
        "'bottom start'",
        "'bottom end'"
      ],
      "default": "'top middle'",
      "category": "position"
    },
    "offset": {
      "type": "Array",
      "desc": "An array of two numbers to offset the Tooltip horizontally and vertically in pixels",
      "default": "[ 14, 14 ]",
      "examples": [
        "[ 8, 8 ]",
        "[ 5, 10 ]"
      ],
      "category": "position"
    },
    "scroll-target": {
      "extends": "scroll-target"
    },
    "delay": {
      "type": "Number",
      "desc": "Configure Tooltip to appear with delay",
      "default": "0",
      "category": "behavior"
    },
    "hide-delay": {
      "type": "Number",
      "desc": "Configure Tooltip to disappear with delay",
      "default": "0",
      "category": "behavior"
    },
    "persistent": {
      "type": "Boolean",
      "desc": "Prevents Tooltip from auto-closing when app's route changes",
      "category": "behavior"
    }
  },
  "slots": {
    "default": {
      "extends": "default"
    }
  },
  "methods": {
    "show": {
      "extends": "show"
    },
    "hide": {
      "extends": "hide"
    },
    "toggle": {
      "extends": "toggle"
    },
    "updatePosition": {
      "desc": "There are some custom scenarios for which Quasar cannot automatically reposition the tooltip without significant performance drawbacks so the optimal solution is for you to call this method when you need it",
      "params": null,
      "returns": null
    }
  },
  "events": {
    "update:model-value": {
      "desc": "Emitted when showing/hidden state changes; Is also used by v-model",
      "params": {
        "value": {
          "type": "Boolean",
          "desc": "New state (showing/hidden)"
        }
      }
    },
    "show": {
      "extends": "show"
    },
    "before-show": {
      "extends": "before-show"
    },
    "hide": {
      "extends": "hide"
    },
    "before-hide": {
      "extends": "before-hide"
    }
  },
  "computedProps": {
    "contentEl": {
      "type": "Element",
      "desc": "The DOM Element of the rendered content",
      "addedIn": "v2.10.1"
    }
  }
}