{
  "name": "Dropdown",
  "props": {
    "arrow": {
      "value": "",
      "description": "Whether the arrows in the drop-down box are displayed",
      "default": "false",
      "type": "boolean | { pointAtCenter: boolean }",
      "description_zh": "下拉框箭头是否显示"
    },
    "autoAdjustOverflow": {
      "value": "",
      "description": "Automatically adjusts the position of the drop-down box when it is occluded",
      "default": "true",
      "type": "boolean",
      "description_zh": "下拉框被遮挡时自动调整位置"
    },
    "autoFocus": {
      "value": "",
      "description": "Turn on the autofocus drop-down box",
      "default": "false",
      "type": "boolean",
      "description_zh": "打开后自动聚焦下拉框"
    },
    "disabled": {
      "value": "",
      "description": "menu whether or not to disable",
      "default": "",
      "type": "boolean",
      "description_zh": "菜单是否禁用"
    },
    "destroyPopupOnHide": {
      "value": "",
      "description": "Whether to destroy the dropdown after it is closed",
      "default": "false",
      "type": "boolean",
      "description_zh": "关闭后是否销毁 Dropdown"
    },
    ":dropdownRender": {
      "value": "",
      "description": "Customize the drop-down box content",
      "default": "",
      "type": "(menus: ReactNode) => ReactNode",
      "description_zh": "自定义下拉框内容"
    },
    ":getPopupContainer": {
      "value": "",
      "description": "The menu renders the parent node. By default, it is rendered to the body, and if you're having trouble scrolling the menu, try modifying the scrolling area and positioning it relative to it. [Example] (https://codepen.io/afc163/pen/zEjNOy?editors=0010)",
      "default": "() => document.body",
      "type": "(triggerNode: HTMLElement) => HTMLElement",
      "description_zh": "菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codepen.io/afc163/pen/zEjNOy?editors=0010)"
    },
    ":menu": {
      "value": "",
      "description": "Menu configuration item",
      "default": "",
      "type": "[MenuProps]",
      "description_zh": "菜单配置项",
      "required": true
    },
    "overlayClassName": {
      "value": "",
      "description": "Drop-down the class name of the root element",
      "default": "",
      "type": "string",
      "description_zh": "下拉根元素的类名称"
    },
    ":overlayStyle": {
      "value": "",
      "description": "Drop-down the style of the root element",
      "default": "",
      "type": "CSSProperties",
      "description_zh": "下拉根元素的样式"
    },
    "placement": {
      "value": [
        "bottom",
        "bottomLeft",
        "bottomRight",
        "topLeft",
        "topRight"
      ],
      "description": "Menu pop-up locations: 'bottom' 'bottomLeft' 'bottomRight' top 'topLeft' topRight",
      "default": "bottomLeft",
      "type": "string",
      "description_zh": "菜单弹出位置：`bottom` `bottomLeft` `bottomRight` top `topLeft` topRight"
    },
    "trigger": {
      "value": [
        "click",
        "hover",
        "contextMenu"
      ],
      "description": "Triggers the behavior of pulling down, and the mobile terminal does not support hover",
      "default": "[hover]",
      "type": "click | hover | contextMenu",
      "description_zh": "触发下拉的行为, 移动端不支持 hover"
    },
    "open": {
      "value": "",
      "description": "Whether the menu is displayed or not, less than 4.23.0 uses visible",
      "default": "",
      "type": "boolean",
      "description_zh": "菜单是否显示，小于 4.23.0 使用 visible"
    }
  },
  "events": [
    {
      "name": "onOpenChange",
      "description": "It is called when the menu display status changes, and the disappear caused by clicking the menu button will not be triggered. Less than 4.23.0 uses onVisibleChange",
      "callback": "(open: boolean) => void",
      "description_zh": "菜单显示状态改变时调用，点击菜单按钮导致的消失不会触发。小于 4.23.0 使用 onVisibleChange",
      "value": ""
    }
  ],
  "link": "https://ant.design/components//dropdown",
  "link_zh": "https://ant.design/components//dropdown",
  "methods": []
}
