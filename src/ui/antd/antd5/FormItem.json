{
  "name": "Form.Item",
  "props": {
    "colon": {
      "value": "",
      "description": "Used with the 'label' attribute to indicate whether a colon after 'label' is displayed",
      "default": "true",
      "type": "boolean",
      "description_zh": "配合 `label` 属性使用，表示是否显示 `label` 后面的冒号"
    },
    ":dependencies": {
      "value": "",
      "description": "Set dependency fields",
      "default": "-",
      "type": "NamePath[]",
      "description_zh": "设置依赖字段"
    },
    ":extra": {
      "value": "",
      "description": "An additional tooltip, similar to 'help', can be used when you need both an error message and a tooltip.",
      "default": "-",
      "type": "ReactNode",
      "description_zh": "额外的提示信息，和 `help` 类似，当需要错误信息和提示文案同时出现时，可以使用这个。"
    },
    ":getValueFromEvent": {
      "value": "",
      "description": "Sets how the value of the event is converted to a field value",
      "default": "-",
      "type": "(..args: any[]) => any",
      "description_zh": "设置如何将 event 的值转换成字段值"
    },
    ":getValueProps": {
      "value": "",
      "description": "Add additional attributes to child elements",
      "default": "-",
      "type": "(value: any) => any",
      "description_zh": "为子元素添加额外的属性"
    },
    "hasFeedback": {
      "value": "",
      "description": "It is recommended to use it with the 'validateStatus' property to display the verification status icon, which is recommended to be used only with the Input component",
      "default": "false",
      "type": "boolean",
      "description_zh": "配合 `validateStatus` 属性使用，展示校验状态图标，建议只配合 Input 组件使用"
    },
    ":help": {
      "value": "",
      "description": "If the prompt message is not set, it will be automatically generated based on the verification rules",
      "default": "-",
      "type": "ReactNode",
      "description_zh": "提示信息，如不设置，则会根据校验规则自动生成"
    },
    "hidden": {
      "value": "",
      "description": "Whether to hide the field (the field will still be collected and verified)",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否隐藏字段（依然会收集和校验字段）"
    },
    "htmlFor": {
      "value": "",
      "description": "Set the child element label 'htmlFor' attribute",
      "default": "-",
      "type": "string",
      "description_zh": "设置子元素 label `htmlFor` 属性"
    },
    "initialValue": {
      "value": "",
      "description": "Set the default values for child elements, if it conflicts with Form's 'initialValues', the Form will prevail",
      "default": "-",
      "type": "string",
      "description_zh": "设置子元素默认值，如果与 Form 的 `initialValues` 冲突则以 Form 为准"
    },
    "label": {
      "value": "",
      "description": "The text of the label label",
      "default": "-",
      "type": "ReactNode",
      "description_zh": "label 标签的文本",
      "required": true
    },
    "labelAlign": {
      "value": [
        "left",
        "right"
      ],
      "description": "Label text alignment",
      "default": "right",
      "type": "left | right",
      "description_zh": "标签文本对齐方式"
    },
    "labelCol": {
      "value": "",
      "description": "label layout, with the ''' component, set the 'span' 'offset' value, such as '{span: 3, offset: 12}' <Col>or 'sm: {span: 3, offset: 12}'. You can use the form's 'labelCol' to do the same thing, and it won't work on nested items. When set at the same time as Form, the Item shall prevail",
      "default": "-",
      "type": "object",
      "description_zh": "label 标签布局，同 `<Col>` 组件，设置 `span` `offset` 值，如 `{span: 3, offset: 12}` 或 `sm: {span: 3, offset: 12}`。你可以通过 Form 的 `labelCol` 进行统一设置，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准"
    },
    ":messageVariables": {
      "value": "",
      "description": "Information for the default validation field",
      "default": "-",
      "type": "Record<string, string>",
      "description_zh": "默认验证字段的信息"
    },
    "name": {
      "value": "",
      "description": "Field name, arrays are supported",
      "default": "-",
      "type": "NamePath",
      "description_zh": "字段名，支持数组",
      "required": true
    },
    ":normalize": {
      "value": "",
      "description": "The component takes the value, converts it, and puts it into the Form. Asynchronous is not supported",
      "default": "-",
      "type": "(value, prevValue, prevValues) => any",
      "description_zh": "组件获取值后进行转换，再放入 Form 中。不支持异步"
    },
    "noStyle": {
      "value": "",
      "description": "'true' is not styled and is used as a pure field control",
      "default": "false",
      "type": "boolean",
      "description_zh": "为 `true` 时不带样式，作为纯字段控件使用"
    },
    "preserve": {
      "value": "",
      "description": "When a field is deleted, the field value is retained",
      "default": "true",
      "type": "boolean",
      "description_zh": "当字段被删除时保留字段值"
    },
    "required": {
      "value": "",
      "description": "Required style settings. If this parameter is not set, it is automatically generated based on the validation rules",
      "default": "false",
      "type": "boolean",
      "description_zh": "必填样式设置。如不设置，则会根据校验规则自动生成"
    },
    ":rules": {
      "value": "",
      "description": "Validation rules: Set the validation logic of the field",
      "default": "-",
      "type": "Rule[]",
      "description_zh": "校验规则，设置字段的校验逻辑"
    },
    "shouldUpdate": {
      "value": "",
      "description": "Custom field update logic",
      "default": "false",
      "type": "boolean | (prevValue, curValue) => boolean",
      "description_zh": "自定义字段更新逻辑"
    },
    ":tooltip": {
      "value": "",
      "description": "Configure the prompt message",
      "default": "-",
      "type": "ReactNode | [TooltipProps & { icon: ReactNode }]",
      "description_zh": "配置提示信息"
    },
    "trigger": {
      "value": "",
      "description": "Set when changes to field values are collected",
      "default": "onChange",
      "type": "string",
      "description_zh": "设置收集字段值变更的时机"
    },
    "validateFirst": {
      "value": "",
      "description": "When a rule fails to be verified, whether to stop the verification of the remaining rules. When 'parallel' is set, it is checked in parallel",
      "default": "false",
      "type": "boolean | parallel",
      "description_zh": "当某一规则校验不通过时，是否停止剩下的规则的校验。设置 `parallel` 时会并行校验"
    },
    ":validateDebounce": {
      "value": "",
      "description": "Set the stabilization and verify it after a delay of milliseconds",
      "default": "",
      "type": "number",
      "description_zh": "设置防抖，延迟毫秒数后进行校验"
    },
    "validateStatus": {
      "value": "",
      "description": "If the verification status is not set, it will be automatically generated according to the verification rules, optional: 'success' 'warning' 'error' 'validating'",
      "default": "-",
      "type": "string",
      "description_zh": "校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'"
    },
    "validateTrigger": {
      "value": "",
      "description": "Set the timing of field validation",
      "default": "onChange",
      "type": "string | string[]",
      "description_zh": "设置字段校验的时机"
    },
    "valuePropName": {
      "value": "",
      "description": "The value of the child node's property, such as Switch, is 'checked'. This property is an encapsulation of 'getValueProps' and will be invalid when you customize 'getValueProps'",
      "default": "value",
      "type": "string",
      "description_zh": "子节点的值的属性，如 Switch 的是 'checked'。该属性为 `getValueProps` 的封装，自定义 `getValueProps` 后会失效"
    },
    ":wrapperCol": {
      "value": "",
      "description": "This property is used when you need to style the layout for an input control, using the same usage as 'labelCol'. You can use the 'wrapperCol' of the Form to set it uniformly, and it will not be applied to nested items. When set at the same time as Form, the Item shall prevail",
      "default": "-",
      "type": "object",
      "description_zh": "需要为输入控件设置布局样式时，使用该属性，用法同 `labelCol`。你可以通过 Form 的 `wrapperCol` 进行统一设置，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准"
    }
  },
  "methods": [],
  "events": [],
  "link": "https://ant.design/components//form",
  "link_zh": "https://ant.design/components//form"
}
