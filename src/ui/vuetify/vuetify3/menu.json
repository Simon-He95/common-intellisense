{
  "name": "VMenu",
  "props": {
    "activator": {
      "default": "undefined",
      "value": "",
      "type": "Element | 'parent' | (string & {}) | ComponentPublicInstance",
      "description": "Explicitly sets the overlay’s activator.",
      "description_zh": "显式设置叠加层的激活器。",
      "required": false
    },
    "activator-props": {
      "default": "{}",
      "value": "",
      "type": "unknown",
      "description": "Apply custom properties to the activator.",
      "description_zh": "将自定义属性应用于激活器。",
      "required": false
    },
    "attach": {
      "default": "false",
      "value": "",
      "type": "string | boolean | Element",
      "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or true to disable teleporting. Uses body by default. Generally not recommended except as a last resort: the default positioning algorithm should handle most scenarios better than is possible without teleporting, and you may have unexpected behavior if the menu ends up as child of its activator.",
      "description_zh": "指定覆盖内容应传送到哪个 DOM 元素。可以是直接元素引用、querySelector 字符串或 true，以禁用传送。默认使用 body。除非万不得已，否则通常不建议使用：默认定位算法应该比没有传送时更好地处理大多数情况，如果菜单最终成为其激活器的子项，则可能会出现意外行为。",
      "required": false
    },
    "close-delay": {
      "default": "250",
      "value": "",
      "type": "string | number",
      "description": "Milliseconds to wait before closing component. Only works with the open-on-hover prop.",
      "description_zh": "关闭组件之前等待的毫秒数。仅适用于 open-on-hover 属性。",
      "required": false
    },
    "close-on-back": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Closes the overlay content when the browser’s back button is pressed or $router.back() is called, cancelling the original navigation. persistent overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
      "description_zh": "在按下浏览器的后退按钮或调用 $router.back（） 时关闭覆盖内容，从而取消原始导航。永久叠加将取消导航并制作动画，就像在外部单击而不是关闭一样。",
      "required": false
    },
    "close-on-content-click": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Designates if menu should close when its content is clicked.",
      "description_zh": "指定在单击菜单内容时是否应关闭菜单。",
      "required": false
    },
    "contained": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Limits the size of the component and scrim to its offset parent. Implies absolute and attach. (Note: The parent element must have position: relative.).",
      "description_zh": "将零部件和纱布的大小限制为其偏移父级。暗示 absolute 和 attach。（注意：父元素必须具有 position： relative。",
      "required": false
    },
    "content-class": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the v-app component (unless the attach prop is provided) and is not targetable by classes passed directly on the component.",
      "description_zh": "将自定义类应用于分离的元素。这很有用，因为内容被移动到 v-app 组件的开头（除非提供了 attach 属性），并且不能被直接在组件上传递的类所定位。",
      "required": false
    },
    "content-props": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "Apply custom properties to the content.",
      "description_zh": "将自定义属性应用于内容。",
      "required": false
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Removes the ability to click or target the component.",
      "description_zh": "删除单击组件或定位组件的功能。",
      "required": false
    },
    "eager": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Forces the component’s content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
      "description_zh": "强制组件的内容在挂载时呈现。如果您的内容不会在 DOM 中呈现，并且您希望为 SEO 抓取，这将非常有用。",
      "required": false
    },
    "height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the height for the component.",
      "description_zh": "设置组件的高度。",
      "required": false
    },
    "id": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "The unique identifier of the component.",
      "description_zh": "组件的唯一标识符。",
      "required": false
    },
    "location": {
      "default": "undefined",
      "value": "",
      "type": "Anchor",
      "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both…",
      "description_zh": "指定用于定位组件的锚点，使用方向提示将其水平对齐、垂直对齐或两者对齐......",
      "required": false
    },
    "location-strategy": {
      "default": "'connected'",
      "value": "",
      "type": "static / connected / LocationStrategyFn",
      "description": "A function used to specifies how the component should position relative to its activator.",
      "description_zh": "用于指定组件相对于其激活器的位置的函数。",
      "required": false
    },
    "max-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the maximum height for the component.",
      "description_zh": "设置组件的最大高度。",
      "required": false
    },
    "max-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the maximum width for the component.",
      "description_zh": "设置组件的最大宽度。",
      "required": false
    },
    "min-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the minimum height for the component.",
      "description_zh": "设置组件的最小高度。",
      "required": false
    },
    "min-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the minimum width for the component. Use auto to use the activator width.",
      "description_zh": "设置组件的最小宽度。使用 auto 来使用激活器宽度。",
      "required": false
    },
    "v-model": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "description_zh": "组件的 v-model 值。如果 component 支持 multiple prop，则默认为空数组。",
      "required": false
    },
    "no-click-animation": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
      "description_zh": "在使用 persistent prop 时，在内容元素外部单击时禁用弹跳效果。",
      "required": false
    },
    "offset": {
      "default": "undefined",
      "value": "",
      "type": "string | number | number[]",
      "description": "A single value that offsets content away from the target based upon what side it is on.",
      "description_zh": "一个值，该值根据内容所在的一侧将内容从目标偏移。",
      "required": false
    },
    "opacity": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the overlay opacity.",
      "description_zh": "设置叠加不透明度。",
      "required": false
    },
    "open-delay": {
      "default": "300",
      "value": "",
      "type": "string | number",
      "description": "Milliseconds to wait before opening component. Only works with the open-on-hover prop.",
      "description_zh": "打开组件之前等待的毫秒数。仅适用于 open-on-hover 属性。",
      "required": false
    },
    "open-on-click": {
      "default": "undefined",
      "value": "",
      "type": "boolean",
      "description": "Designates whether menu should open on activator click.",
      "description_zh": "指定是否应在单击激活器时打开菜单。",
      "required": false
    },
    "open-on-focus": {
      "default": "undefined",
      "value": "",
      "type": "boolean",
      "description": "Activate the component when the activator is focused.",
      "description_zh": "当激活器聚焦时激活组件。",
      "required": false
    },
    "open-on-hover": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Designates whether menu should open on activator hover.",
      "description_zh": "指定是否应在激活器悬停时打开菜单。",
      "required": false
    },
    "origin": {
      "default": "'auto'",
      "value": "",
      "type": "Anchor / auto / overlap",
      "description": "Sets the transition origin on the element. You can find more information on the MDN documentation for transition origin.",
      "description_zh": "设置元素上的过渡原点。您可以在 transition origin 的 MDN 文档上找到更多信息。",
      "required": false
    },
    "persistent": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Clicking outside of the element or pressing esc key will not deactivate it.",
      "description_zh": "单击元素外部或按 Esc 键不会将其停用。",
      "required": false
    },
    "scrim": {
      "default": "false",
      "value": "",
      "type": "string | boolean",
      "description": "Accepts true/false to enable background, and string to define color.",
      "description_zh": "接受 true/false 以启用背景，接受 string 以定义颜色。",
      "required": false
    },
    "scroll-strategy": {
      "default": "'reposition'",
      "value": "",
      "type": "none / close / block / reposition / ScrollStrategyFn",
      "description": "Strategy used when the component is activate and user scrolls.",
      "description_zh": "当组件处于 activate 状态且用户滚动时使用的策略。",
      "required": false
    },
    "submenu": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Opens with right arrow and closes on left instead of up/down. Implies location=\"end\". Directions are reversed for RTL.",
      "description_zh": "使用向右箭头打开，从左侧而不是向上/向下关闭。暗示 location=“end”。RTL 的方向是相反的。",
      "required": false
    },
    "target": {
      "default": "undefined",
      "value": "",
      "type": "  | Element  | 'parent'  | 'cursor'  | (string & {})  | ComponentPublicInstance  | [number, number]",
      "description": "For locationStrategy=“connected”, specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default.",
      "description_zh": "对于 locationStrategy=“connected”，指定叠加层应相对于其定位自身的 x，y 坐标的元素或数组。默认情况下，这将是 activator 元素。",
      "required": false
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。",
      "required": false
    },
    "transition": {
      "default": "{component: {name: 'VDialogTransition'}}",
      "value": "",
      "type": "  | string  | boolean  | (TransitionProps & { component: Component })  | { component: Component }",
      "description": "Sets the component transition. Can be one of the built in or custom transition.",
      "description_zh": "设置零部件过渡。可以是内置或自定义过渡之一。",
      "required": false
    },
    "width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Sets the width for the component.",
      "description_zh": "设置组件的宽度。",
      "required": false
    },
    "z-index": {
      "default": "2000",
      "value": "",
      "type": "string | number",
      "description": "The z-index used for the component.",
      "description_zh": "用于组件的 z-index。",
      "required": false
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-menu/",
  "link_zh": "https://vuetifyjs.com/en/api/v-menu/",
  "typeDetail": {},
  "events": [
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes.",
      "description_zh": "组件的模型更改时发出的事件。",
      "params": "[boolean]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "activator",
      "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
      "description_zh": "使用时，将在单击时激活组件（或将鼠标悬停在特定组件上）。这将手动停止事件传播。如果没有此插槽，如果通过其模型打开组件，则需要手动停止事件传播。"
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。"
    }
  ],
  "exposed": [
    {
      "name": "activatorEl",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "HTMLElement"
    },
    {
      "name": "animateClick",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "() => void"
    },
    {
      "name": "contentEl",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "HTMLElement"
    },
    {
      "name": "globalTop",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "boolean"
    },
    {
      "name": "id",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "string"
    },
    {
      "name": "localTop",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "boolean"
    },
    {
      "name": "scrimEl",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "HTMLElement"
    },
    {
      "name": "target",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "HTMLElement | [number, number]"
    },
    {
      "name": "updateLocation",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "(e: Event) => void"
    }
  ]
}
