{
  "name": "VInput",
  "props": {
    "append-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Creates a v-icon component after default content in the append slot.",
      "description_zh": "在附加插槽中的默认内容之后创建一个 v 图标组件。",
      "required": false
    },
    "center-affix": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Vertically align appendInner, prependInner, clearIcon and label in the center.",
      "description_zh": "将 appendInner、prependInner、clearIcon 和 label 垂直对齐在中心。",
      "required": false
    },
    "density": {
      "default": "'default'",
      "value": "",
      "type": "default / comfortable / compact",
      "version": "",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "调整组件使用的垂直高度。",
      "required": false
    },
    "direction": {
      "default": "'horizontal'",
      "value": "",
      "type": "horizontal / vertical",
      "version": "",
      "description": "Changes the direction of the input.",
      "description_zh": "更改输入的方向。",
      "required": false
    },
    "disabled": {
      "default": "null",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes the ability to click or target the component.",
      "description_zh": "删除单击组件或定位组件的功能。",
      "required": false
    },
    "error": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Puts the input in a manual error state.",
      "description_zh": "将输入置于手动错误状态。",
      "required": false
    },
    "error-messages": {
      "default": "[]",
      "value": "",
      "type": "string | string[]",
      "version": "",
      "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the rules prop. This field will not trigger validation.",
      "description_zh": "将输入置于错误状态并传递自定义错误消息。将与 rules prop 发生的任何验证相结合。此字段不会触发验证。",
      "required": false
    },
    "focused": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces a focused state styling on the component.",
      "description_zh": "强制对组件进行 focused state 样式设置。",
      "required": false
    },
    "hide-details": {
      "default": "false",
      "value": "",
      "type": "boolean / auto",
      "version": "",
      "description": "Hides hint and validation errors. When set to auto messages will be rendered only if there’s a message (hint, error message, counter value etc) to display.",
      "description_zh": "隐藏提示和验证错误。当设置为 auto 时，仅当有消息 （提示、错误消息、计数器值等） 要显示时，才会呈现消息。",
      "required": false
    },
    "hide-spin-buttons": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Hides spin buttons on the input when type is set to number.",
      "description_zh": "当 type 设置为 number 时，隐藏输入上的旋转按钮。",
      "required": false
    },
    "hint": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Displays hint text below the input when focused. Force this always open with the persistent-hint property.",
      "description_zh": "聚焦时，在输入下方显示提示文本。使用 persistent-hint 属性强制 this always 打开。",
      "required": false
    },
    "id": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the DOM id on the component.",
      "description_zh": "设置组件上的 DOM ID。",
      "required": false
    },
    "label": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the text of the v-label or v-field-label component.",
      "description_zh": "设置 v-label 或 v-field-label 组件的文本。",
      "required": false
    },
    "max-errors": {
      "default": "1",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Control the maximum number of shown errors from validation.",
      "description_zh": "控制验证时显示的错误的最大数量。",
      "required": false
    },
    "max-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum width for the component.",
      "description_zh": "设置组件的最大宽度。",
      "required": false
    },
    ":messages": {
      "default": "[]",
      "value": "",
      "type": "string | string[]",
      "version": "",
      "description": "Displays a list of messages or a single message if using a string.",
      "description_zh": "显示消息列表，如果使用字符串，则显示单个消息。",
      "required": true
    },
    "min-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum width for the component.",
      "description_zh": "设置组件的最小宽度。",
      "required": false
    },
    "v-model": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "description_zh": "组件的 v-model 值。如果 component 支持 multiple prop，则默认为空数组。",
      "required": false
    },
    "name": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the component’s name attribute.",
      "description_zh": "设置组件的 name 属性。",
      "required": false
    },
    "persistent-hint": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces hint to always be visible.",
      "description_zh": "强制提示始终可见。",
      "required": false
    },
    "prepend-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Prepends an icon to the component, uses the same syntax as v-icon.",
      "description_zh": "在组件前面加上一个图标，使用与 v-icon 相同的语法。",
      "required": false
    },
    "readonly": {
      "default": "null",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Puts input in readonly state.",
      "description_zh": "将输入置于只读状态。",
      "required": false
    },
    "rules": {
      "default": "[]",
      "value": "",
      "type": "ValidationRule[]",
      "version": "",
      "description": "Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) false or is a string.",
      "description_zh": "接受 function、boolean 和 string 类型的混合数组。函数将输入值作为参数传递，并且必须返回 true / false 或包含错误消息的字符串。如果函数返回 （或数组中的任何值包含） false 或为字符串，则输入字段将进入错误状态。",
      "required": false
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。",
      "required": false
    },
    "validate-on": {
      "default": "undefined",
      "value": "",
      "type": " / blur / input / submit / invalid-input / blur lazy / input lazy / submit lazy / invalid-input lazy / blur eager / input eager / submit eager / invalid-input eager / lazy blur / lazy input / lazy submit / lazy invalid-input / eager blur / eager input / eager submit / eager invalid-input / lazy / eager",
      "version": "",
      "description": "Change what type of event triggers validation to run.",
      "description_zh": "更改触发验证的事件类型以运行。",
      "required": false
    },
    "validation-value": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "The value used when applying validation rules.",
      "description_zh": "应用验证规则时使用的值。",
      "required": false
    },
    "width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the width for the component.",
      "description_zh": "设置组件的宽度。",
      "required": false
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-input/",
  "link_zh": "https://vuetifyjs.com/en/api/v-input/",
  "typeDetail": {},
  "events": [
    {
      "name": "click:append",
      "description": "Emitted when appended icon is clicked.",
      "description_zh": "单击附加图标时发出。",
      "params": "[MouseEvent]",
      "value": ""
    },
    {
      "name": "click:prepend",
      "description": "Emitted when prepended icon is clicked.",
      "description_zh": "单击前置图标时发出。",
      "params": "[MouseEvent]",
      "value": ""
    },
    {
      "name": "update:focused",
      "description": "Event that is emitted when the component’s focus state changes.",
      "description_zh": "组件的焦点状态更改时发出的事件。",
      "params": "[boolean]",
      "value": ""
    },
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes.",
      "description_zh": "组件的模型更改时发出的事件。",
      "params": "[unknown]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "append",
      "description": "Adds an item inside the input and after input content.",
      "description_zh": "在 input 内容内和 After input 内容中添加一个项目。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "details",
      "description": "Slot for custom input details to modifying the display of messages.",
      "description_zh": "用于修改消息显示的自定义输入详细信息的插槽。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "message",
      "description": "Slot used to customize the message content.",
      "description_zh": "用于自定义消息内容的插槽。",
      "params": "{ message: string }"
    },
    {
      "name": "prepend",
      "description": "Adds an item outside the input and before input content.",
      "description_zh": "在输入内容之外和之前添加项目。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    }
  ],
  "exposed": [
    {
      "name": "errorMessages",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "string[]"
    },
    {
      "name": "isValid",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "boolean"
    },
    {
      "name": "reset",
      "description": "Resets the input value.",
      "description_zh": "Resets the input value.",
      "detail": "() => Promise<void>"
    },
    {
      "name": "resetValidation",
      "description": "Resets validation of the input without modifying its value.",
      "description_zh": "Resets validation of the input without modifying its value.",
      "detail": "() => Promise<void>"
    },
    {
      "name": "validate",
      "description": "Validates the input’s value.",
      "description_zh": "Validates the input’s value.",
      "detail": "(silent: boolean) => Promise<string[]>"
    }
  ]
}
