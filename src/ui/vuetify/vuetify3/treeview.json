{
  "name": "VTreeview",
  "props": {
    "activatable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Allows user to mark a node as active by clicking on it.",
      "description_zh": "允许用户通过单击节点将其标记为活动节点。",
      "required": false
    },
    "activated": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "Array of ids of activated nodes.",
      "description_zh": "已激活节点的 ID 数组。",
      "required": false
    },
    "active-class": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The class applied to the component when it is in an active state.",
      "description_zh": "当组件处于活动状态时应用于组件的类。",
      "required": false
    },
    "active-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The applied color when the component is in an active state.",
      "description_zh": "组件处于活动状态时应用的颜色。",
      "required": false
    },
    "active-strategy": {
      "default": "undefined",
      "value": "",
      "type": "  | 'single-leaf'  | 'leaf'  | 'independent'  | 'single-independent'  | ActiveStrategy  | ((mandatory: boolean) => ActiveStrategy)",
      "version": "",
      "description": "Affects how items with children behave when activated.leaf: Only leaf nodes (items without children) can be activated.independent: All nodes can be activated whether they have children or not.classic: Activating a parent node will cause all children to be activated.",
      "description_zh": "影响具有子项的项目在激活时的行为方式。leaf：只能激活叶节点（没有子项的项目）。independent：无论它们是否具有子节点，都可以激活所有节点。classic：激活父节点将导致激活所有子节点。",
      "required": false
    },
    "base-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the color of component when not focused.",
      "description_zh": "设置未聚焦时组件的颜色。",
      "required": false
    },
    "bg-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the control’s background. Used on components that also support the color prop. - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件的背景。用于也支持 color 属性的组件。- 支持实用工具颜色（例如 Success 或 Purple）或 CSS 颜色（#033 或 RGBA（255， 0， 0， 0.5））。在 colors 页面上查找内置类的列表。",
      "required": false
    },
    "border": {
      "default": "false",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Designates the border-radius applied to the component. This can be xs, sm, md, lg, xl.",
      "description_zh": "指定应用于组件的 border-radius。这可以是 xs、sm、md、lg、xl。",
      "required": false
    },
    "collapse-icon": {
      "default": "'$treeviewCollapse'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Icon to display when the list item is expanded.",
      "description_zh": "展开列表项时显示的图标。",
      "required": false
    },
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the active node - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定颜色应用于活动节点 - 支持实用工具颜色（例如 success 或 purple）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在 colors 页面上查找内置类的列表。",
      "required": false
    },
    "custom-filter": {
      "default": "undefined",
      "value": "",
      "type": "FilterFunction",
      "version": "",
      "description": "Function used to filter items, called for each filterable key on each item in the list. The first argument is the filterable value from the item, the second is the search term, and the third is the internal item object. The function should return true if the item should be included in the filtered list, or the index of the match in the value if it should be included with the result highlighted.",
      "description_zh": "用于筛选项目的函数，为列表中每个项目上的每个可筛选键调用。第一个参数是项目中的可筛选值，第二个参数是搜索词，第三个参数是内部项目对象。如果项目应包含在筛选列表中，则该函数应返回 true，如果匹配项应包含在突出显示的结果中，则该值应返回匹配项的索引。",
      "required": false
    },
    "custom-key-filter": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "Function used on specific keys within the item object. customFilter is skipped for columns with customKeyFilter specified.",
      "description_zh": "用于 item 对象中特定键的函数。对于指定了 customKeyFilter 的列，将跳过 customFilter。",
      "required": false
    },
    "density": {
      "default": "'default'",
      "value": "",
      "type": "default / comfortable / compact",
      "version": "",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "调整组件使用的垂直高度。",
      "required": false
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Disables selection for all nodes.",
      "description_zh": "禁用所有节点的选择。",
      "required": false
    },
    "elevation": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the elevation page.",
      "description_zh": "指定应用于组件的 0 到 24 之间的高程。您可以在海拔页面上找到更多信息。",
      "required": false
    },
    "expand-icon": {
      "default": "'$treeviewExpand'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Icon used to indicate that a node can be expanded.",
      "description_zh": "图标，用于指示节点可以展开。",
      "required": false
    },
    "false-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "required": false
    },
    "filter-keys": {
      "default": "['title']",
      "value": "",
      "type": "string | string[]",
      "version": "",
      "description": "Array of specific keys to filter on the item.",
      "description_zh": "用于筛选项目的特定键的数组。",
      "required": false
    },
    "filter-mode": {
      "default": "'intersection'",
      "value": "",
      "type": "some / every / union / intersection",
      "version": "",
      "description": "Controls how the results of customFilter and customKeyFilter are combined. All modes only apply customFilter to columns not specified in customKeyFilter.some: There is at least one match from either the custom filter or the custom key filter.every: All columns match either the custom filter or the custom key filter.union: There is at least one match from the custom filter, or all columns match the custom key filters.intersection: There is at least one match from the custom filter, and all columns match the custom key filters.",
      "description_zh": "控制 customFilter 和 customKeyFilter 的结果的组合方式。所有模式仅将 customFilter 应用于 customKeyFilter.some：自定义筛选条件或自定义键至少有一个匹配项 filter.every：所有列都与自定义筛选条件或自定义键匹配 filter.union：自定义筛选条件中至少有一个匹配项，或者所有列都与自定义键 filters.intersection 匹配： 自定义筛选条件中至少有一个匹配项，并且所有列都与自定义键筛选条件匹配。",
      "required": false
    },
    "height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the height for the component.",
      "description_zh": "设置组件的高度。",
      "required": false
    },
    "indeterminate-icon": {
      "default": "'$checkboxIndeterminate'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Icon used when node is in an indeterminate state. Only visible when selectable is true.",
      "description_zh": "节点处于不确定状态时使用的图标。Only visible when selectable 为 true。",
      "required": false
    },
    "item-children": {
      "default": "'children'",
      "value": "",
      "type": "SelectItemKey",
      "version": "",
      "description": "Property on supplied items that contains its children.",
      "description_zh": "包含其子项的 supplied items 上的属性。",
      "required": false
    },
    "item-props": {
      "default": "'props'",
      "value": "",
      "type": "SelectItemKey",
      "version": "",
      "description": "Props object that will be applied to each item component. true will treat the original object as raw props and pass it directly to the component.",
      "description_zh": "Props 对象。true 会将原始对象视为 raw props 并将其直接传递给组件。",
      "required": false
    },
    "items": {
      "default": "[]",
      "value": "",
      "type": "unknown[]",
      "version": "",
      "description": "An array of items used to build the treeview.",
      "description_zh": "用于构建 treeview 的项数组。",
      "required": false
    },
    "item-title": {
      "default": "'title'",
      "value": "",
      "type": "SelectItemKey",
      "version": "",
      "description": "Property on supplied items that contains its title.",
      "description_zh": "包含其标题的所提供项上的属性。",
      "required": false
    },
    "item-value": {
      "default": "'value'",
      "value": "",
      "type": "SelectItemKey",
      "version": "",
      "description": "Property on supplied items that contains its value.",
      "description_zh": "包含其值的 supplied items 上的属性。",
      "required": false
    },
    "lines": {
      "default": "'one'",
      "value": "",
      "type": "false / one / two / three",
      "version": "",
      "description": "Designates a minimum-height for all children v-list-item components. This prop uses line-clamp and is not supported in all browsers.",
      "description_zh": "为所有子 v-list-item 组件指定 minimum-height。这个 prop 使用 line-clamp，并不是所有浏览器都支持。",
      "required": false
    },
    "load-children": {
      "default": "undefined",
      "value": "",
      "type": "(item: unknown) => Promise<void>",
      "version": "",
      "description": "A function used when dynamically loading children. If this prop is set, then the supplied function will be run if expanding an item that has a item-children property that is an empty array. Supports returning a Promise.",
      "description_zh": "动态加载 children 时使用的函数。如果设置了此 prop，则如果展开具有空数组的 item-children 属性的项，则将运行提供的函数。支持返回 Promise。",
      "required": false
    },
    "loading-icon": {
      "default": "'$loading'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Icon used when node is in a loading state.",
      "description_zh": "节点处于加载状态时使用的图标。",
      "required": false
    },
    "mandatory": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces at least one item to always be selected (if available).",
      "description_zh": "强制始终选择至少一个项目（如果可用）。",
      "required": false
    },
    "max-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum height for the component.",
      "description_zh": "设置组件的最大高度。",
      "required": false
    },
    "max-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum width for the component.",
      "description_zh": "设置组件的最大宽度。",
      "required": false
    },
    "min-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum height for the component.",
      "description_zh": "设置组件的最小高度。",
      "required": false
    },
    "min-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum width for the component.",
      "description_zh": "设置组件的最小宽度。",
      "required": false
    },
    "v-model": {
      "default": "[]",
      "value": "",
      "type": "unknown[]",
      "version": "",
      "description": "Allows one to control which nodes are selected. The array contains the values of currently selected items. It is equivalent to the v-model:selected",
      "description_zh": "允许控制选择哪些节点。该数组包含当前所选项目的值。它相当于 v-model：selected",
      "required": false
    },
    "no-filter": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Disables all item filtering.",
      "description_zh": "禁用所有项目筛选。",
      "required": false
    },
    "open-all": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "When true will cause all branch nodes to be opened when component is mounted.",
      "description_zh": "如果为 true，则会导致在挂载组件时打开所有分支节点。",
      "required": false
    },
    "opened": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "An array containing the values of currently opened groups. Can be two-way bound with v-model:opened.",
      "description_zh": "包含当前打开的组值的数组。可以用 v-model：opened 进行双向绑定。",
      "required": false
    },
    "open-on-click": {
      "default": "undefined",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "When true will cause nodes to be opened by clicking anywhere on it, instead of only opening by clicking on expand icon. When using this prop with activatable you will be unable to mark nodes with children as active.",
      "description_zh": "如果为 true，则可以通过单击节点上的任意位置来打开节点，而不仅仅是通过单击展开图标来打开节点。将此 prop 与 activatable 一起使用时，您将无法将带有 children 的节点标记为 active。",
      "required": false
    },
    "return-object": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "When true will make v-model, active.sync and open.sync return the complete object instead of just the key.",
      "description_zh": "当 true 时，v-model 、 active.sync 和 open.sync 将返回完整的对象，而不仅仅是 key。",
      "required": false
    },
    "rounded": {
      "default": "undefined",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Provides an alternative active style for v-treeview node. Only visible when activatable is true and should not be used in conjunction with the shaped prop.",
      "description_zh": "为 v-treeview 节点提供替代活动样式。Only visible when activatable 为 true，不应与 shaped 属性一起使用。",
      "required": false
    },
    "search": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The search model for filtering results.",
      "description_zh": "用于筛选结果的搜索模型。",
      "required": false
    },
    "selectable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Will render a checkbox next to each node allowing them to be selected. Additionally, the openOnClick property will be applied internally.",
      "description_zh": "将在每个节点旁边呈现一个复选框，允许选择它们。此外，openOnClick 属性将在内部应用。",
      "required": false
    },
    "selected": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "An array containing the values of currently selected items. Can be two-way bound with v-model:selected.",
      "description_zh": "包含当前选定项的值的数组。可以与 v-model：selected 进行双向绑定。",
      "required": false
    },
    "selected-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The color of the selection checkbox.",
      "description_zh": "选择复选框的颜色。",
      "required": false
    },
    "select-strategy": {
      "default": "'single-leaf'",
      "value": "",
      "type": "  | 'single-leaf'  | 'leaf'  | 'independent'  | 'single-independent'  | 'classic'  | SelectStrategy  | ((mandatory: boolean) => SelectStrategy)",
      "version": "",
      "description": "Affects how items with children behave when selected.leaf: Only leaf nodes (items without children) can be selected.independent: All nodes can be selected whether they have children or not.classic: Selecting a parent node will cause all children to be selected, parent nodes will be displayed as selected if all their descendants are selected. Only leaf nodes will be added to the model.",
      "description_zh": "影响具有子项的项目在选中时的行为方式。leaf：只能选择叶节点（没有子项的项目）。independent：可以选择所有节点，无论它们是否具有子节点。classic：选择父节点将导致选择所有子节点，如果父节点的所有后代都被选中，则父节点将显示为已选中。只有叶节点将添加到模型中。",
      "required": false
    },
    "slim": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Reduces horizontal spacing for badges, icons, tooltips, and avatars within slim list items to create a more compact visual representation.",
      "description_zh": "减少细长列表项中徽章、图标、工具提示和头像的水平间距，以创建更紧凑的视觉表示形式。",
      "required": false
    },
    "tag": {
      "default": "'div'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a custom tag used on the root element.",
      "description_zh": "指定根元素上使用的自定义标记。",
      "required": false
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。",
      "required": false
    },
    "tile": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes any applied border-radius from the component.",
      "description_zh": "从组件中删除任何应用的 border-radius。",
      "required": false
    },
    "true-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "required": false
    },
    "value-comparator": {
      "default": "undefined",
      "value": "",
      "type": "(a: any, b: any) => boolean",
      "version": "",
      "description": "Apply a custom comparison algorithm to compare model-value and values contains in the items prop.",
      "description_zh": "应用自定义比较算法来比较 models-value 和 items prop 中包含的值。",
      "required": false
    },
    "variant": {
      "default": "'text'",
      "value": "",
      "type": "flat / elevated / tonal / outlined / text / plain",
      "version": "",
      "description": "Applies a distinct style to the component.",
      "description_zh": "将不同的样式应用于组件。",
      "required": false
    },
    "width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the width for the component.",
      "description_zh": "设置组件的宽度。",
      "required": false
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-treeview/",
  "link_zh": "https://vuetifyjs.com/en/api/v-treeview/",
  "typeDetail": {},
  "events": [
    {
      "name": "click:open",
      "description": "Emits the item when it is clicked to open.",
      "description_zh": "单击以打开项目时发出该项目。",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "value": ""
    },
    {
      "name": "click:select",
      "description": "Emits the item when it is clicked to select.",
      "description_zh": "单击以选择项目时发出项目。",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "value": ""
    },
    {
      "name": "update:activated",
      "description": "Emits the array of active items when this value changes.",
      "description_zh": "当此值更改时，发出活动项的数组。",
      "params": "[unknown]",
      "value": ""
    },
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes.",
      "description_zh": "组件的模型更改时发出的事件。",
      "params": "[unknown]",
      "value": ""
    },
    {
      "name": "update:opened",
      "description": "Emits the array of open items when this value changes.",
      "description_zh": "当此值更改时，发出打开项的数组。",
      "params": "[unknown]",
      "value": ""
    },
    {
      "name": "update:selected",
      "description": "Emits the array of selected items when this value changes.",
      "description_zh": "当此值更改时，发出所选项目的数组。",
      "params": "[unknown]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "append",
      "description": "Appends content after label.",
      "description_zh": "在标签后附加内容。",
      "params": "{\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n} & { item: unknown }"
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。",
      "params": ""
    },
    {
      "name": "divider",
      "description": "Slot for custom divider.",
      "description_zh": "用于自定义分隔器的插槽。",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "header",
      "description": "Slot for custom header.",
      "description_zh": "自定义标头的插槽。",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "item",
      "description": "Define a custom item appearance.",
      "description_zh": "定义自定义项外观。",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "prepend",
      "description": "Prepends content before label.",
      "description_zh": "在标签前预置内容。",
      "params": "{\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n} & { item: unknown }"
    },
    {
      "name": "subheader",
      "description": "Slot for custom subheader.",
      "description_zh": "自定义子标题的插槽。",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "subtitle",
      "description": "Slot for the component’s subtitle content.",
      "description_zh": "组件字幕内容的插槽。",
      "params": "{ subtitle: string | number } & { item: unknown }"
    },
    {
      "name": "title",
      "description": "Slot for the component’s title content.",
      "description_zh": "组件标题内容的插槽。",
      "params": "{ title: string | number } & { item: unknown }"
    }
  ],
  "exposed": []
}
