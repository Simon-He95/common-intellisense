{
  "name": "VList",
  "props": {
    "activatable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "required": false
    },
    "activated": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "Array of ids of activated nodes.",
      "description_zh": "已激活节点的 ID 数组。",
      "required": false
    },
    "active-class": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The class applied to the component when it is in an active state.",
      "description_zh": "当组件处于活动状态时应用于组件的类。",
      "required": false
    },
    "active-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The applied color when the component is in an active state.",
      "description_zh": "组件处于活动状态时应用的颜色。",
      "required": false
    },
    "active-strategy": {
      "default": "undefined",
      "value": "",
      "type": "  | 'single-leaf'  | 'leaf'  | 'independent'  | 'single-independent'  | ActiveStrategy  | ((mandatory: boolean) => ActiveStrategy)",
      "version": "",
      "description": "Affects how items with children behave when activated.leaf: Only leaf nodes (items without children) can be activated.independent: All nodes can be activated whether they have children or not.classic: Activating a parent node will cause all children to be activated.",
      "description_zh": "影响具有子项的项目在激活时的行为方式。leaf：只能激活叶节点（没有子项的项目）。independent：无论它们是否具有子节点，都可以激活所有节点。classic：激活父节点将导致激活所有子节点。",
      "required": false
    },
    "base-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the color of component when not focused.",
      "description_zh": "设置未聚焦时组件的颜色。",
      "required": false
    },
    "bg-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the control’s background. Used on components that also support the color prop. - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件的背景。用于也支持 color 属性的组件。- 支持实用工具颜色（例如 Success 或 Purple）或 CSS 颜色（#033 或 RGBA（255， 0， 0， 0.5））。在 colors 页面上查找内置类的列表。",
      "required": false
    },
    "border": {
      "default": "false",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Designates the border-radius applied to the component. This can be xs, sm, md, lg, xl.",
      "description_zh": "指定应用于组件的 border-radius。这可以是 xs、sm、md、lg、xl。",
      "required": false
    },
    "collapse-icon": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Icon to display when the list item is expanded.",
      "description_zh": "展开列表项时显示的图标。",
      "required": false
    },
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件 - 支持实用工具颜色（例如 success 或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在 colors 页面上查找内置类的列表。",
      "required": false
    },
    "density": {
      "default": "'default'",
      "value": "",
      "type": "default / comfortable / compact",
      "version": "",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "调整组件使用的垂直高度。",
      "required": false
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Puts all children inputs into a disabled state.",
      "description_zh": "将所有子项输入置于禁用状态。",
      "required": false
    },
    "elevation": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the elevation page.",
      "description_zh": "指定应用于组件的 0 到 24 之间的高程。您可以在海拔页面上找到更多信息。",
      "required": false
    },
    "expand-icon": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Icon to display when the list item is collapsed.",
      "description_zh": "折叠列表项时显示的图标。",
      "required": false
    },
    "height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the height for the component.",
      "description_zh": "设置组件的高度。",
      "required": false
    },
    "item-children": {
      "default": "'children'",
      "value": "",
      "type": "SelectItemKey<any>",
      "version": "",
      "description": "Property on supplied items that contains its children.",
      "description_zh": "包含其子项的 supplied items 上的属性。",
      "required": false
    },
    "item-props": {
      "default": "'props'",
      "value": "",
      "type": "SelectItemKey<any>",
      "version": "",
      "description": "Props object that will be applied to each item component. true will treat the original object as raw props and pass it directly to the component.",
      "description_zh": "Props 对象。true 会将原始对象视为 raw props 并将其直接传递给组件。",
      "required": false
    },
    "items": {
      "default": "[]",
      "value": "",
      "type": "any[]",
      "version": "",
      "description": "Can be an array of objects or strings. By default objects should have a title property, and can optionally have a props property containing any VListItem props, a value property to allow selection, and a children property containing more item objects. Keys to use for these can be changed with the item-title, item-value, item-props, and item-children props.",
      "description_zh": "可以是对象或字符串的数组。默认情况下，对象应该具有 title 属性，并且可以选择具有包含任何 VListItem props 的 props 属性、允许选择的 value 属性以及包含更多 item 对象的 children 属性。用于这些的键可以通过 item-title、item-value、item-props 和 item-children 属性来更改。",
      "required": false
    },
    "item-title": {
      "default": "'title'",
      "value": "",
      "type": "SelectItemKey<any>",
      "version": "",
      "description": "Property on supplied items that contains its title.",
      "description_zh": "包含其标题的所提供项上的属性。",
      "required": false
    },
    "item-type": {
      "default": "'type'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Designates the key on the supplied items that is used for determining the nodes type.",
      "description_zh": "在提供的项上指定用于确定节点类型的键。",
      "required": false
    },
    "item-value": {
      "default": "'value'",
      "value": "",
      "type": "SelectItemKey<any>",
      "version": "",
      "description": "Property on supplied items that contains its value.",
      "description_zh": "包含其值的 supplied items 上的属性。",
      "required": false
    },
    "lines": {
      "default": "'one'",
      "value": "",
      "type": "false / one / two / three",
      "version": "",
      "description": "Designates a minimum-height for all children v-list-item components. This prop uses line-clamp and is not supported in all browsers.",
      "description_zh": "为所有子 v-list-item 组件指定 minimum-height。这个 prop 使用 line-clamp，并不是所有浏览器都支持。",
      "required": false
    },
    "mandatory": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces at least one item to always be selected (if available).",
      "description_zh": "强制始终选择至少一个项目（如果可用）。",
      "required": false
    },
    "max-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum height for the component.",
      "description_zh": "设置组件的最大高度。",
      "required": false
    },
    "max-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum width for the component.",
      "description_zh": "设置组件的最大宽度。",
      "required": false
    },
    "min-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum height for the component.",
      "description_zh": "设置组件的最小高度。",
      "required": false
    },
    "min-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum width for the component.",
      "description_zh": "设置组件的最小宽度。",
      "required": false
    },
    "nav": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "An alternative styling that reduces v-list-item width and rounds the corners. Typically used with v-navigation-drawer.",
      "description_zh": "一种替代样式，用于减小 v-list-item 宽度并使角变圆。通常与 v-navigation-drawer 一起使用。",
      "required": false
    },
    "opened": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "An array containing the values of currently opened groups. Can be two-way bound with v-model:opened.",
      "description_zh": "包含当前打开的组值的数组。可以用 v-model：opened 进行双向绑定。",
      "required": false
    },
    "open-strategy": {
      "default": "'list'",
      "value": "",
      "type": "single / multiple / list / OpenStrategy",
      "version": "",
      "description": "Affects how items with children behave when expanded.multiple: Any number of groups can be open at once.single: Only one group at each level can be open, opening a group will cause others to close.list: Multiple, but all other groups will close when an item is selected.",
      "description_zh": "影响具有子项的项目在展开时的行为方式。multiple：一次可以打开任意数量的组。single：每个级别只能打开一个组，打开一个组将导致其他组关闭。list：多个，但所有其他组将在选择项目时关闭。",
      "required": false
    },
    "return-object": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Changes the selection behavior to return the object directly rather than the value specified with item-value.",
      "description_zh": "更改选择行为以直接返回对象，而不是使用 item-value 指定的值。",
      "required": false
    },
    "rounded": {
      "default": "undefined",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Designates the border-radius applied to the component. This can be 0, xs, sm, true, lg, xl, pill, circle, and shaped. Find more information on available border radius classes on the Border Radius page.",
      "description_zh": "指定应用于组件的 border-radius。这可以是 0、xs、sm、true、lg、xl、pill、circle 和 shaped。在 Border Radius 页面上查找有关可用边界半径类的更多信息。",
      "required": false
    },
    "selectable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "required": false
    },
    "selected": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "An array containing the values of currently selected items. Can be two-way bound with v-model:selected.",
      "description_zh": "包含当前选定项的值的数组。可以与 v-model：selected 进行双向绑定。",
      "required": false
    },
    "select-strategy": {
      "default": "'single-leaf'",
      "value": "",
      "type": "  | 'single-leaf'  | 'leaf'  | 'independent'  | 'single-independent'  | 'classic'  | SelectStrategy  | ((mandatory: boolean) => SelectStrategy)",
      "version": "",
      "description": "Affects how items with children behave when selected.leaf: Only leaf nodes (items without children) can be selected.independent: All nodes can be selected whether they have children or not.classic: Selecting a parent node will cause all children to be selected, parent nodes will be displayed as selected if all their descendants are selected. Only leaf nodes will be added to the model.",
      "description_zh": "影响具有子项的项目在选中时的行为方式。leaf：只能选择叶节点（没有子项的项目）。independent：可以选择所有节点，无论它们是否具有子节点。classic：选择父节点将导致选择所有子节点，如果父节点的所有后代都被选中，则父节点将显示为已选中。只有叶节点将添加到模型中。",
      "required": false
    },
    "slim": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Reduces horizontal spacing for badges, icons, tooltips, and avatars within slim list items to create a more compact visual representation.",
      "description_zh": "减少细长列表项中徽章、图标、工具提示和头像的水平间距，以创建更紧凑的视觉表示形式。",
      "required": false
    },
    "tag": {
      "default": "'div'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a custom tag used on the root element.",
      "description_zh": "指定根元素上使用的自定义标记。",
      "required": false
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。",
      "required": false
    },
    "tile": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes any applied border-radius from the component.",
      "description_zh": "从组件中删除任何应用的 border-radius。",
      "required": false
    },
    "value-comparator": {
      "default": "undefined",
      "value": "",
      "type": "(a: any, b: any) => boolean",
      "version": "",
      "description": "Apply a custom comparison algorithm to compare model-value and values contains in the items prop.",
      "description_zh": "应用自定义比较算法来比较 models-value 和 items prop 中包含的值。",
      "required": false
    },
    "variant": {
      "default": "'text'",
      "value": "",
      "type": "flat / elevated / tonal / outlined / text / plain",
      "version": "",
      "description": "Applies a distinct style to the component.",
      "description_zh": "将不同的样式应用于组件。",
      "required": false
    },
    "width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the width for the component.",
      "description_zh": "设置组件的宽度。",
      "required": false
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-list/",
  "link_zh": "https://vuetifyjs.com/en/api/v-list/",
  "typeDetail": {},
  "events": [
    {
      "name": "click:activate",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "value": ""
    },
    {
      "name": "click:open",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "value": ""
    },
    {
      "name": "click:select",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "[{ id: unknown; value: boolean; path: unknown[] }]",
      "value": ""
    },
    {
      "name": "update:activated",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "[unknown]",
      "value": ""
    },
    {
      "name": "update:opened",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "[unknown]",
      "value": ""
    },
    {
      "name": "update:selected",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "[unknown]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "append",
      "description": "Adds an item inside the input and after input content.",
      "description_zh": "在 input 内容内和 After input 内容中添加一个项目。",
      "params": "{\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n} & { item: any }"
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。",
      "params": ""
    },
    {
      "name": "divider",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "header",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "item",
      "description": "Define a custom item appearance.",
      "description_zh": "定义自定义项外观。",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "prepend",
      "description": "Adds an item outside the input and before input content.",
      "description_zh": "在输入内容之外和之前添加项目。",
      "params": "{\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n} & { item: any }"
    },
    {
      "name": "subheader",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "{ props: { title: string; value: any; [string]: any } }"
    },
    {
      "name": "subtitle",
      "description": "Slot for the component’s subtitle content.",
      "description_zh": "组件字幕内容的插槽。",
      "params": "{ subtitle: string | number } & { item: any }"
    },
    {
      "name": "title",
      "description": "Slot for the component’s title content.",
      "description_zh": "组件标题内容的插槽。",
      "params": "{ title: string | number } & { item: any }"
    }
  ],
  "exposed": [
    {
      "name": "children",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "Map<unknown, unknown[]>"
    },
    {
      "name": "focus",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "(location: 'next' | 'prev' | 'first' | 'last') => void"
    },
    {
      "name": "getPath",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "(id: unknown) => unknown[]"
    },
    {
      "name": "open",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "(id: unknown, value: boolean, event: Event) => void"
    },
    {
      "name": "parents",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "detail": "Map<unknown, unknown>"
    },
    {
      "name": "select",
      "description": "The function used to select an items. The first argument expects the value of the item.",
      "description_zh": "The function used to select an items. The first argument expects the value of the item.",
      "detail": "(id: unknown, value: boolean, event: Event) => void"
    }
  ],
  "suggestions": [
    "v-list-group",
    "v-list-subheader",
    "v-list-item",
    "v-list-item-title",
    "v-list-item-subtitle",
    "v-list-item-action",
    "v-list-img",
    "v-list-item-media"
  ]
}
