{
  "name": "VChip",
  "props": {
    "active-class": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "The class applied to the component when it matches the current route. Find more information about the active-class prop on the vue-router documentation.",
      "description_zh": "当组件与当前路由匹配时应用于组件的类。在 vue-router 文档上查找有关 active-class prop 的更多信息。"
    },
    "append-avatar": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Appends a v-avatar component after default content in the append slot.",
      "description_zh": "在追加插槽中的默认内容之后附加一个 v-avatar 组件。"
    },
    "append-icon": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "Creates a v-icon component after default content in the append slot.",
      "description_zh": "在追加插槽中的默认内容之后创建一个 v-icon 组件。"
    },
    "border": {
      "default": "false",
      "value": "",
      "type": "string | number | boolean",
      "description": "Designates the border-radius applied to the component. This can be xs, sm, md, lg, xl.",
      "description_zh": "指定应用于组件的边框半径。这可以是 xs、sm、md、lg、xl。"
    },
    "closable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Adds remove button and then a chip can be closed.",
      "description_zh": "添加删除按钮，然后可以关闭芯片。"
    },
    "close-icon": {
      "default": "$delete",
      "value": "",
      "type": "any",
      "description": "Change the default icon used for close chips.",
      "description_zh": "更改用于关闭芯片的默认图标。"
    },
    "close-label": {
      "default": "$vuetify.close",
      "value": "",
      "type": "string",
      "description": "Text used for aria-label on the close button in close chips. Can also be customized globally in Internationalization.",
      "description_zh": "用于关闭芯片中关闭按钮上的咏叹调标签的文本。也可以在国际化方面进行全球定制。"
    },
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件 - 支持实用程序颜色（例如 success 或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。"
    },
    "density": {
      "default": "default",
      "value": "",
      "type": "default / comfortable / compact",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "调整元件使用的垂直高度。"
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Removes the ability to click or target the component.",
      "description_zh": "删除了单击组件或将组件定位的功能。"
    },
    "draggable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Makes the chip draggable.",
      "description_zh": "使芯片可拖动。"
    },
    "elevation": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the elevation page.",
      "description_zh": "指定应用于组件的高程介于 0 和 24 之间。您可以在高程页面上找到更多信息。"
    },
    "exact": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Exactly match the link. Without this, ‘/’ will match every route. You can find more information about the exact prop on the vue-router documentation.",
      "description_zh": "完全匹配链接。如果没有这个，“/”将匹配每个路由。你可以在 vue-router 文档中找到更多关于这个 prop 的信息。"
    },
    "filter": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Displays a selection icon when selected.",
      "description_zh": "选中时显示选择图标。"
    },
    "filter-icon": {
      "default": "$complete",
      "value": "",
      "type": "string",
      "description": "Change the default icon used for filter chips.",
      "description_zh": "更改用于滤波芯片的默认图标。"
    },
    "href": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Designates the component as anchor and applies the href attribute.",
      "description_zh": "将组件指定为锚点并应用 href 属性。"
    },
    "label": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Applies a medium size border radius.",
      "description_zh": "应用中等大小的边框半径。"
    },
    "link": {
      "default": "undefined",
      "value": "",
      "type": "boolean",
      "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
      "description_zh": "指定组件是链接。当使用 href 或 to prop 时，这是自动的。"
    },
    "v-model": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "description_zh": "组件的 v 模型值。如果组件支持多 prop，则默认为空数组。"
    },
    "pill": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Remove v-avatar padding.",
      "description_zh": "移除 v-avatar 填充。"
    },
    "prepend-avatar": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Prepends a v-avatar component in the prepend slot before default content.",
      "description_zh": "在默认内容之前的 prepend 插槽中预置 v-avatar 组件。"
    },
    "prepend-icon": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "Creates a v-icon component in the prepend slot before default content.",
      "description_zh": "在默认内容之前的前置插槽中创建一个 v-icon 组件。"
    },
    "replace": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Setting replace prop will call router.replace() instead of router.push() when clicked, so the navigation will not leave a history record. You can find more information about the replace prop on the vue-router documentation.",
      "description_zh": "设置 replace prop 将在单击时调用 router.replace（） 而不是 router.push（），因此导航不会留下历史记录。你可以在 vue-router 文档中找到更多关于 replace prop 的信息。"
    },
    "ripple": {
      "default": "true",
      "value": "",
      "type": "boolean | { class: string }",
      "description": "Applies the v-ripple directive.",
      "description_zh": "应用 v-ripple 指令。"
    },
    "rounded": {
      "default": "undefined",
      "value": "",
      "type": "string | number | boolean",
      "description": "Designates the border-radius applied to the component. This can be 0, xs, sm, true, lg, xl, pill, circle, and shaped. Find more information on available border radius classes on the Border Radius page.",
      "description_zh": "指定应用于组件的边框半径。这可以是 0、xs、sm、true、lg、xl、pill、circle 和 shaped。有关可用边框半径类的详细信息，请访问边框半径页面。"
    },
    "selected-class": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Configure the active CSS class applied when an item is selected.",
      "description_zh": "配置选择项目时应用的活动 CSS 类。"
    },
    "size": {
      "default": "default",
      "value": "",
      "type": "string | number",
      "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: x-small, small, default, large, and x-large.",
      "description_zh": "设置元件的高度和宽度。默认单位为 px。还可以使用以下预定义大小：x-small、small、default、large 和 x-large。"
    },
    "tag": {
      "default": "span",
      "value": "",
      "type": "string",
      "description": "Specify a custom tag used on the root element.",
      "description_zh": "指定用于根元素的自定义标记。"
    },
    "text": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Specify content text for the component.",
      "description_zh": "指定组件的内容文本。"
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。"
    },
    "tile": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Removes any applied border-radius from the component.",
      "description_zh": "从元件中移除任何应用的边框半径。"
    },
    "to": {
      "default": "undefined",
      "value": "",
      "type": "RouteLocationRaw",
      "description": "Denotes the target route of the link. You can find more information about the to prop on the vue-router documentation.",
      "description_zh": "表示链路的目标路由。你可以在 vue-router 文档中找到更多关于 to prop 的信息。"
    },
    "value": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "The value used when a child of a v-chip-group.",
      "description_zh": "当 v-chip-group 的子项时使用的值。"
    },
    "variant": {
      "default": "tonal",
      "value": "",
      "type": "flat / text / elevated / tonal / outlined / plain",
      "description": "Applies a distinct style to the component.",
      "description_zh": "将不同的样式应用于组件。"
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-chip/#links",
  "link_zh": "https://vuetifyjs.com/en/api/v-chip/#links",
  "typeDetail": {},
  "events": [
    {
      "name": "click",
      "description": "Emitted when component is clicked, toggles chip if contained in a chip group - Will trigger component to ripple when clicked unless the .native modifier is used.",
      "description_zh": "单击组件时发出，如果芯片组中包含芯片，则切换芯片 - 除非使用 .native 修饰符，否则单击时会触发组件产生波纹。",
      "params": "[MouseEvent | KeyboardEvent]",
      "value": ""
    },
    {
      "name": "click:close",
      "description": "Emitted when close icon is clicked.",
      "description_zh": "单击关闭图标时发出。",
      "params": "[MouseEvent]",
      "value": ""
    },
    {
      "name": "clickOnce",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "缺少描述（在 github 中编辑）",
      "params": "[MouseEvent]",
      "value": ""
    },
    {
      "name": "group:selected",
      "description": "Event that is emitted when an item is selected within a group.",
      "description_zh": "在组中选择项目时发出的事件。",
      "params": "[{ value: boolean }]",
      "value": ""
    },
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes.",
      "description_zh": "组件模型更改时发出的事件。",
      "params": "[boolean]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "append",
      "description": "Adds an item inside the input and after input content.",
      "description_zh": "在 input 内容内和 After input 内容中添加一个项目。",
      "params": ""
    },
    {
      "name": "close",
      "description": "Slot for icon used in close prop.",
      "description_zh": "close prop 中使用的图标插槽。",
      "params": ""
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。",
      "params": "{\n  isSelected: boolean\n  selectedClass: boolean | string[]\n  select: (value: boolean) => void\n  toggle: () => void\n  value: unknown\n  disabled: boolean\n}"
    },
    {
      "name": "filter",
      "description": "Slot for icon used in filter prop.",
      "description_zh": "filter 属性中使用的图标插槽。",
      "params": ""
    },
    {
      "name": "label",
      "description": "The default slot of the v-label or v-field-label component.",
      "description_zh": "v-label 或 v-field-label 组件的默认插槽。",
      "params": ""
    },
    {
      "name": "prepend",
      "description": "Adds an item outside the input and before input content.",
      "description_zh": "在输入内容之外和之前添加项目。",
      "params": ""
    }
  ]
}
