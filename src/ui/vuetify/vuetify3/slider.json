{
  "name": "VSlider",
  "props": {
    "append-icon": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "Creates a v-icon component after default content in the append slot.",
      "description_zh": "在追加槽中的默认内容之后创建一个 v-icon 组件。"
    },
    "center-affix": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Vertically align appendInner, prependInner, clearIcon and label in the center.",
      "description_zh": "将 appendInner、prependInner、clearIcon 和标签垂直对齐在中心。"
    },
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件 - 支持实用程序颜色（例如成功或紫色）或 css 颜色（例如成功或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。"
    },
    "density": {
      "default": "default",
      "value": "",
      "type": "default / comfortable / compact",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "调整组件使用的垂直高度。"
    },
    "direction": {
      "default": "horizontal",
      "value": "",
      "type": "horizontal / vertical",
      "description": "Change the input direction.",
      "description_zh": "改变输入方向."
    },
    "disabled": {
      "default": "null",
      "value": "",
      "type": "boolean",
      "description": "Remove the component's click or target functionality.",
      "description_zh": "移除组件的单击或 target 功能。"
    },
    "elevation": {
      "default": "2",
      "value": "",
      "type": "string | number",
      "description": "The elevation of the component is acceptable from 0 to 24. You can read more on the Elevation page.",
      "description_zh": "组件的海拔可接受 0 到 24 之间的值。你可以在 elevation page 浏览更多信息。"
    },
    "error": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Set the input box to a manual error state.",
      "description_zh": "将输入框设置为手动错误状态。"
    },
    "error-messages": {
      "default": "[]",
      "value": "",
      "type": "string | string[]",
      "description": "Put the input box into an error state and pass in a custom error message. will be combined with any validation from the rules property. This field does not trigger validation.",
      "description_zh": "将输入框置于错误状态，并传入自定义的错误信息。将与来自 rules 属性的任何验证相结合。这个字段不会触发验证。"
    },
    "focused": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Force the component to use the style when focused.",
      "description_zh": "强制组件使用聚焦时的样式。"
    },
    "hide-details": {
      "default": "false",
      "value": "",
      "type": "boolean / auto",
      "description": "Hide hints and validation errors. When set to auto and only displays information (prompts, error messages, counter values, etc.) to display.",
      "description_zh": "隐藏提示和验证错误。当设置为 auto 并且只有在有信息（提示、错误信息、计数器值等）要显示时，才会显示信息。"
    },
    "hide-spin-buttons": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "When the type is set to number, the rotation button is hidden on the input element.",
      "description_zh": "当类型设置为 number 时，在 input 元素上隐藏旋转按钮。"
    },
    "hint": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Displays hint text below the input when focused. Force this always open with the persistent-hint property.",
      "description_zh": "聚焦时在输入下方显示提示文本。使用 persistent-hint 属性强制它始终打开。"
    },
    "id": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Sets the DOM id on the component.",
      "description_zh": "设置组件上的 DOM ID。"
    },
    "label": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Sets the text of the v-label or v-field-label component.",
      "description_zh": "设置 v-label 或 v-field-label 组件的文本。"
    },
    "max": {
      "default": "100",
      "value": "",
      "type": "string | number",
      "description": "Sets the maximum allowed value.",
      "description_zh": "设置允许的最大值。"
    },
    "max-errors": {
      "default": "1",
      "value": "",
      "type": "string | number",
      "description": "Control the maximum number of shown errors from validation.",
      "description_zh": "控制验证中显示的最大错误数。"
    },
    "messages": {
      "default": "[]",
      "value": "",
      "type": "string | string[]",
      "description": "Display a list of messages or messages (if using strings)",
      "description_zh": "显示消息列表或消息（如果使用字符串）"
    },
    "min": {
      "default": "0",
      "value": "",
      "type": "string | number",
      "description": "Sets the minimum allowed value.",
      "description_zh": "设置允许的最小值。"
    },
    ":v-model": {
      "default": "0",
      "value": "",
      "type": "string | number",
      "description": "The value of the component v-mode. If the component supports variants, the default is an empty array.",
      "description_zh": "组件 v-mode 的值。如果组件支持多属性，默认为空数组。"
    },
    "name": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Set the name property of the component.",
      "description_zh": "设置组件的 name 属性."
    },
    "persistent-hint": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Forces hint to always be visible.",
      "description_zh": "力暗示始终可见。"
    },
    "prepend-icon": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "Prepends an icon to the component, uses the same syntax as v-icon.",
      "description_zh": "在组件前面添加一个图标，使用与 v-icon 相同的语法。"
    },
    "readonly": {
      "default": "null",
      "value": "",
      "type": "boolean",
      "description": "Puts input in readonly state.",
      "description_zh": "将输入置于只读状态。"
    },
    "reverse": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Reverses the slider direction.",
      "description_zh": "反转滑块方向。"
    },
    "ripple": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Apply the v-ripple directive.",
      "description_zh": "应用 v-ripple 指令。"
    },
    "rounded": {
      "default": "undefined",
      "value": "",
      "type": "string | number | boolean",
      "description": "Applies the border-radius style to the specified component. You can get more information about this on the Corner Radius of Borders page",
      "description_zh": "对指定的组件应用 border-radius 样式。您可以在 边框的圆角半径页面 获取更多有关信息"
    },
    "rules": {
      "default": "[]",
      "value": "",
      "type": "ValidationRule[]",
      "description": "Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) false or is a string.",
      "description_zh": "接受 function、boolean 和 string 类型的混合数组。函数将输入值作为参数传递，并且必须返回 true / false 或包含错误消息的字符串。如果函数返回（或数组中的任何值包含）false 或字符串，则输入字段将进入错误状态。"
    },
    "show-ticks": {
      "default": "false",
      "value": "",
      "type": "boolean / always",
      "description": "Displays tick marks. If true, tick marks will be displayed when using the slider. If set to 'always', it will always show tick marks.",
      "description_zh": "显示刻度线。如果 true ，使用滑块时将显示刻度线。如果设置为 'always' ，它总是显示刻度线。"
    },
    "step": {
      "default": "0",
      "value": "",
      "type": "string | number",
      "description": "If greater than 0, sets step interval for ticks.",
      "description_zh": "如果大于 0，则设置刻度的步进间隔。"
    },
    "thumb-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Sets the thumb and thumb label color.",
      "description_zh": "设置拇指和拇指标签颜色。"
    },
    "thumb-label": {
      "default": "undefined",
      "value": "",
      "type": "boolean / always",
      "description": "Thumb labels are displayed",
      "description_zh": "显示拇指标签"
    },
    "thumb-size": {
      "default": "20",
      "value": "",
      "type": "string | number",
      "description": "Controls the size of the thumbnail label.",
      "description_zh": "控制缩略图标签的大小。"
    },
    "ticks": {
      "default": "undefined",
      "value": "",
      "type": "number[] | Record<number, string>",
      "description": "Displays tick marks. If true, tick marks will be displayed when using the slider. If set to 'always', it will always show tick marks.",
      "description_zh": "显示刻度线。如果 true ，使用滑块时将显示刻度线。如果设置为 'always' ，它总是显示刻度线。"
    },
    "tick-size": {
      "default": "2",
      "value": "",
      "type": "string | number",
      "description": "Controls the size of ticks",
      "description_zh": "控制 ticks 的大小"
    },
    "track-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Sets the tick mark color",
      "description_zh": "设置刻度线颜色"
    },
    "track-fill-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Sets the tick fill color",
      "description_zh": "设置刻度线填充颜色"
    },
    "track-size": {
      "default": "4",
      "value": "",
      "type": "string | number",
      "description": "Sets the track’s size (height).",
      "description_zh": "设置轨道的大小（高度）。"
    },
    "validate-on": {
      "default": "undefined",
      "value": "",
      "type": " / blur / input / submit / blur lazy / input lazy / submit lazy / lazy blur / lazy input / lazy submit / lazy",
      "description": "Change what type of event triggers validation to run.",
      "description_zh": "更改触发要运行的验证的事件类型。"
    },
    "validation-value": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "description": "The value used when applying validation rules.",
      "description_zh": "应用验证规则时使用的值。"
    }
  },
  "link": "https://vuetifyjs.com/zh-Hans/api/v-slider/#links",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-slider/#links",
  "typeDetail": {},
  "events": [
    {
      "name": "click:append",
      "description": "Emitted when appended icon is clicked.",
      "description_zh": "单击附加图标时发出。",
      "params": "[MouseEvent]",
      "value": ""
    },
    {
      "name": "click:prepend",
      "description": "Emitted when prepended icon is clicked.",
      "description_zh": "单击前置图标时发出。",
      "params": "[MouseEvent]",
      "value": ""
    },
    {
      "name": "end3.2.0 版本的新特色",
      "description": "Slider value emitted at the end of slider movement.",
      "description_zh": "滑块移动结束时发出的滑块值。",
      "params": "[number]",
      "value": ""
    },
    {
      "name": "start3.2.0 版本的新特色",
      "description": "Slider value emitted at start of slider movement.",
      "description_zh": "滑块移动开始时发出的滑块值。",
      "params": "[number]",
      "value": ""
    },
    {
      "name": "update:focused",
      "description": "Event that is emitted when the component’s focus state changes.",
      "description_zh": "当组件的焦点状态更改时发出的事件。",
      "params": "[boolean]",
      "value": ""
    },
    {
      "name": "update:modelValue",
      "description": "An event that is raised when a component's model-value changes.",
      "description_zh": "当组件的 model-value 更改时引发的事件。",
      "params": "[number]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "append",
      "description": "Adds an item inside the input and after input content.",
      "description_zh": "在 input 内容内和 After input 内容中添加一个项目。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "details",
      "description": "Slot for custom input details to modifying the display of messages.",
      "description_zh": "用于修改消息显示的自定义输入详细信息的插槽。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "label",
      "description": "The default slot of the v-label or v-field-label component.",
      "description_zh": "v-label 或 v-field-label 组件的默认插槽。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "message",
      "description": "Slot used to customize the message content.",
      "description_zh": "用于自定义消息内容的插槽。",
      "params": "{ message: string }"
    },
    {
      "name": "prepend",
      "description": "Adds an item outside the input and before input content.",
      "description_zh": "在输入内容之外和之前添加项目。",
      "params": "{\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}"
    },
    {
      "name": "thumb-label",
      "description": "Slot for the thumb label.",
      "description_zh": "Thumb 标签的插槽。",
      "params": "{ modelValue: number }"
    },
    {
      "name": "tick-label",
      "description": "Slot for the tick label.",
      "description_zh": "刻度标签的插槽。",
      "params": "{\n  tick: { value: number; position: number; label: string }\n  index: number\n}"
    }
  ]
}
