{
  "name": "VBtn",
  "props": {
    "active": {
      "default": "undefined",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Controls the active state of the item. This is typically used to highlight the component.",
      "description_zh": "控制项的活动状态。这通常用于突出显示组件。",
      "required": false
    },
    "active-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The applied color when the component is in an active state.",
      "description_zh": "组件处于活动状态时应用的颜色。",
      "required": false
    },
    "append-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Creates a v-icon component after default content in the append slot.",
      "description_zh": "在附加插槽中的默认内容之后创建一个 v 图标组件。",
      "required": false
    },
    "base-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the color of component when not focused.",
      "description_zh": "设置未聚焦时组件的颜色。",
      "required": false
    },
    "block": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Expands the button to 100% of available space.",
      "description_zh": "将按钮扩展到可用空间的 100%。",
      "required": false
    },
    "border": {
      "default": "false",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Designates the border-radius applied to the component. This can be xs, sm, md, lg, xl.",
      "description_zh": "指定应用于组件的 border-radius。这可以是 xs、sm、md、lg、xl。",
      "required": false
    },
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将指定的颜色应用于控件 - 支持实用工具颜色（例如 success 或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在 colors 页面上查找内置类的列表。",
      "required": false
    },
    "density": {
      "default": "'default'",
      "value": "",
      "type": "default / comfortable / compact",
      "version": "",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "调整组件使用的垂直高度。",
      "required": false
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes the ability to click or target the component.",
      "description_zh": "删除单击组件或定位组件的功能。",
      "required": false
    },
    "elevation": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the elevation page.",
      "description_zh": "指定应用于组件的 0 到 24 之间的高程。您可以在海拔页面上找到更多信息。",
      "required": false
    },
    "exact": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Exactly match the link. Without this, ‘/’ will match every route. You can find more information about the exact prop on the vue-router documentation.",
      "description_zh": "与链接完全匹配。如果没有这个，'/' 将匹配每个路由。你可以在 vue-router 文档中找到有关 exact prop 的更多信息。",
      "required": false
    },
    "flat": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes the button box shadow. This is different than using the ‘flat’ variant.",
      "description_zh": "删除按钮框阴影。这与使用 'flat' 变体不同。",
      "required": false
    },
    "height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the height for the component.",
      "description_zh": "设置组件的高度。",
      "required": false
    },
    "href": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Designates the component as anchor and applies the href attribute.",
      "description_zh": "将组件指定为锚点并应用 href 属性。",
      "required": false
    },
    "icon": {
      "default": "false",
      "value": "",
      "type": "  | boolean  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Apply a specific icon using the v-icon component. The button will become round.",
      "description_zh": "使用 v-icon 组件应用特定图标。按钮将变为圆形。",
      "required": false
    },
    "loading": {
      "default": "false",
      "value": "",
      "type": "string | boolean",
      "version": "",
      "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it’s supported by the component) or the primary color.",
      "description_zh": "显示线性进度条。可以是指定应用于进度条的颜色的 String（任何材料颜色或主题颜色 - primary、secondary、success、info、warning、error），也可以是使用组件颜色（由 color 属性设置 - 如果组件支持）或主要颜色的 Boolean。",
      "required": false
    },
    "location": {
      "default": "undefined",
      "value": "",
      "type": "Anchor",
      "version": "",
      "description": "Specifies the component’s location. Can combine by using a space separated string.",
      "description_zh": "指定组件的位置。可以使用空格分隔的字符串进行组合。",
      "required": false
    },
    "max-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum height for the component.",
      "description_zh": "设置组件的最大高度。",
      "required": false
    },
    "max-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum width for the component.",
      "description_zh": "设置组件的最大宽度。",
      "required": false
    },
    "min-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum height for the component.",
      "description_zh": "设置组件的最小高度。",
      "required": false
    },
    "min-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum width for the component.",
      "description_zh": "设置组件的最小宽度。",
      "required": false
    },
    "position": {
      "default": "undefined",
      "value": "",
      "type": "static / relative / fixed / absolute / sticky",
      "version": "",
      "description": "Sets the position for the component.",
      "description_zh": "设置零部件的位置。",
      "required": false
    },
    "prepend-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Creates a v-icon component in the prepend slot before default content.",
      "description_zh": "在默认内容之前的前置插槽中创建 v 图标组件。",
      "required": false
    },
    "readonly": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Puts the button in a readonly state. Cannot be clicked or navigated to by keyboard.",
      "description_zh": "将按钮置于只读状态。无法通过键盘单击或导航到。",
      "required": false
    },
    "replace": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Setting replace prop will call router.replace() instead of router.push() when clicked, so the navigation will not leave a history record. You can find more information about the replace prop on the vue-router documentation.",
      "description_zh": "设置 replace 属性将在单击时调用 router.replace（） 而不是 router.push（），因此导航不会留下历史记录。你可以在 vue-router 文档中找到有关 replace prop 的更多信息。",
      "required": false
    },
    "ripple": {
      "default": "true",
      "value": "",
      "type": "boolean | { class: string }",
      "version": "",
      "description": "Applies the v-ripple directive.",
      "description_zh": "应用 v-ripple 指令。",
      "required": false
    },
    "rounded": {
      "default": "undefined",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Designates the border-radius applied to the component. This can be 0, xs, sm, true, lg, xl, pill, circle, and shaped. Find more information on available border radius classes on the Border Radius page.",
      "description_zh": "指定应用于组件的 border-radius。这可以是 0、xs、sm、true、lg、xl、pill、circle 和 shaped。在 Border Radius 页面上查找有关可用边界半径类的更多信息。",
      "required": false
    },
    "selected-class": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Configure the active CSS class applied when an item is selected.",
      "description_zh": "配置在选择项目时应用的活动 CSS 类。",
      "required": false
    },
    "size": {
      "default": "'default'",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: x-small, small, default, large, and x-large.",
      "description_zh": "设置组件的高度和宽度。默认单位为 px。还可以使用以下预定义大小：x-small、small、default、large 和 x-large。",
      "required": false
    },
    "slim": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Reduces padding to 0 8px.",
      "description_zh": "将填充减少到 0 8px。",
      "required": false
    },
    "stacked": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Displays the button as a flex-column.",
      "description_zh": "将按钮显示为 flex 列。",
      "required": false
    },
    "symbol": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "The Symbol used to hook into group functionality for components like v-btn-toggle and v-bottom-navigation.",
      "description_zh": "用于钩入组件（如 v-btn-toggle 和 v-bottom-navigation）的组功能的 Symbol。",
      "required": false
    },
    "tag": {
      "default": "'button'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a custom tag used on the root element.",
      "description_zh": "指定根元素上使用的自定义标记。",
      "required": false
    },
    "textNew": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "in v3.2.0",
      "description": "Specify content text for the component.",
      "description_zh": "指定组件的内容文本。",
      "required": false
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。",
      "required": false
    },
    "tile": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes any applied border-radius from the component.",
      "description_zh": "从组件中删除任何应用的 border-radius。",
      "required": false
    },
    "to": {
      "default": "undefined",
      "value": "",
      "type": "RouteLocationRaw",
      "version": "",
      "description": "Denotes the target route of the link. You can find more information about the to prop on the vue-router documentation.",
      "description_zh": "表示链路的目标路由。你可以在 vue-router 文档中找到有关 to prop 的更多信息。",
      "required": false
    },
    "value": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
      "description_zh": "在组中选择组件时使用的值。如果未提供，将使用唯一 ID。",
      "required": false
    },
    "variant": {
      "default": "'elevated'",
      "value": "",
      "type": "flat / text / elevated / tonal / outlined / plain",
      "version": "",
      "description": "Applies a distinct style to the component.",
      "description_zh": "将不同的样式应用于组件。",
      "required": false
    },
    "width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the width for the component.",
      "description_zh": "设置组件的宽度。",
      "required": false
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-btn/",
  "link_zh": "https://vuetifyjs.com/en/api/v-btn/",
  "typeDetail": {},
  "events": [
    {
      "name": "group:selected",
      "description": "Event that is emitted when an item is selected within a group.",
      "description_zh": "在组中选择项时发出的事件。",
      "params": "[{ value: boolean }]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "append",
      "description": "Adds an item inside the input and after input content.",
      "description_zh": "在 input 内容内和 After input 内容中添加一个项目。"
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。"
    },
    {
      "name": "loader",
      "description": "Slot for custom loader (displayed when loading prop is equal to true).",
      "description_zh": "自定义加载器的插槽（当加载 prop 等于 true 时显示）。"
    },
    {
      "name": "prepend",
      "description": "Adds an item outside the input and before input content.",
      "description_zh": "在输入内容之外和之前添加项目。"
    }
  ],
  "exposed": [
    {
      "name": "group",
      "description": "Internal representation when used in VBtnToggle.",
      "description_zh": "Internal representation when used in VBtnToggle.",
      "detail": "{\n  id: number\n  isSelected: boolean\n  isFirst: boolean\n  isLast: boolean\n  toggle: () => void\n  select: (value: boolean) => void\n  selectedClass: false | (string | undefined)[]\n  value: unknown\n  disabled: boolean | undefined\n  group: {\n    register: (item: GroupItem, cmp: ComponentInternalInstance) => void\n    unregister: (id: number) => void\n    select: (id: number, value: boolean) => void\n    selected: readonly number[]\n    isSelected: (id: number) => boolean\n    prev: () => void\n    next: () => void\n    selectedClass: string | undefined\n    items: { id: number; value: unknown; disabled: boolean | undefined }[]\n    disabled: boolean | undefined\n    getItemIndex: (value: unknown) => number\n  }\n}"
    }
  ]
}
