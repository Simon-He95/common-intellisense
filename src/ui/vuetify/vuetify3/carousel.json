{
  "name": "VCarousel",
  "props": {
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Applies a color to the navigation dots - supports utility colors (for example success or purple) or css color (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "将颜色应用于导航点 - 支持实用程序颜色（例如成功或紫色）或 css 颜色（例如成功或紫色）或 css 颜色（#033 或 rgba（255， 0， 0， 0.5））。在颜色页面上查找内置类的列表。"
    },
    "continuous": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "Determines whether carousel is continuous.",
      "description_zh": "确定轮播是否连续。"
    },
    "cycle": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Determines whether the carousel should cycle through the image.",
      "description_zh": "确定轮播是否应该循环显示图像。"
    },
    "delimiter-icon": {
      "default": "$delimiter",
      "value": "",
      "type": "any",
      "description": "Sets icon for carousel delimiter.",
      "description_zh": "设置轮播分隔符的图标。"
    },
    "direction": {
      "default": "horizontal",
      "value": "",
      "type": "horizontal / vertical",
      "description": "The transition direction when changing windows.",
      "description_zh": "更改窗口时的过渡方向。"
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Remove the component's click or target functionality.",
      "description_zh": "移除组件的单击或 target 功能。"
    },
    "height": {
      "default": "500",
      "value": "",
      "type": "string | number",
      "description": "Sets the height of the component.",
      "description_zh": "设定组件的高度。"
    },
    "hide-delimiter-background": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Hides the background of the bottom separator.",
      "description_zh": "隐藏底部分隔符的背景。"
    },
    "hide-delimiters": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Hides the bottom separator of the carousel.",
      "description_zh": "隐藏轮播的底部分隔符。"
    },
    "interval": {
      "default": "6000",
      "value": "",
      "type": "string | number",
      "description": "The duration between carousel image cycles. The cycle attribute is required.",
      "description_zh": "轮播图像周期之间的持续时间。需要 cycle 属性。"
    },
    "mandatory": {
      "default": "force",
      "value": "",
      "type": "boolean / force",
      "description": "Force at least one item to be selected, if available.",
      "description_zh": "强制至少选择一个项目（如果可用）。"
    },
    ":v-model": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "description": "The value of the component v-mode. If the component supports variants, the default is an empty array.",
      "description_zh": "组件 v-mode 的值。如果组件支持多属性，默认为空数组。"
    },
    "next-icon": {
      "default": "$next",
      "value": "",
      "type": "any",
      "description": "An icon that appears to force pagination of the next item.",
      "description_zh": "强制对下一项分页而显示的图标。"
    },
    "prev-icon": {
      "default": "$prev",
      "value": "",
      "type": "any",
      "description": "An icon that is displayed to force pagination of the previous item.",
      "description_zh": "强制对前一项分页而显示的图标。"
    },
    "progress": {
      "default": "false",
      "value": "",
      "type": "string | boolean",
      "description": "Displays a carousel progress bar. The cycle and interval attributes are required.",
      "description_zh": "显示轮播进度条。需要 cycle 和 interval 属性。"
    },
    "reverse": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "Reverses the normal direction of the transition.",
      "description_zh": "反转正常的过渡方向。"
    },
    "selected-class": {
      "default": "v-window-item--active",
      "value": "",
      "type": "string",
      "description": "Configure the name of the CSS class that will be applied when the selected item is selected.",
      "description_zh": "配置被选中项目时应用的 CSS 类名。"
    },
    "show-arrows": {
      "default": "true",
      "value": "",
      "type": "string | boolean",
      "description": "Displays the Next/Previous arrow for navigation.",
      "description_zh": "显示 下一个/前一个 导航的箭头。"
    },
    "tag": {
      "default": "div",
      "value": "",
      "type": "string",
      "description": "Specifies the custom tag to be used on the root element.",
      "description_zh": "指定在根元素上使用的自定义标签。"
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "为此组件及其所有子组件指定主题。"
    },
    "touch": {
      "default": "undefined",
      "value": "",
      "type": "boolean | TouchHandlers",
      "description": "Custom left and right functions are provided when swiping left and right.",
      "description_zh": "左右滑动时提供自定义的 left 和 right 函数。"
    },
    "vertical-delimiters": {
      "default": "false",
      "value": "",
      "type": "boolean / left / right",
      "description": "Displays the separator of the carousel vertically.",
      "description_zh": "垂直显示轮播的分隔符。"
    }
  },
  "link": "https://vuetifyjs.com/zh-Hans/api/v-carousel/#links",
  "link_zh": "https://vuetifyjs.com/zh-Hans/api/v-carousel/#links",
  "typeDetail": {},
  "events": [
    {
      "name": "update:modelValue",
      "description": "An event that is raised when a component's model-value changes.",
      "description_zh": "当组件的 model-value 更改时引发的事件。",
      "params": "[unknown]",
      "value": ""
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "additional",
      "description": "Slot for additional content at the end of the component.",
      "description_zh": "组件末尾的附加内容插槽。",
      "params": "{\n  group: {\n    register: (\n      item: {\n        id: number\n        value: Ref<unknown>\n        disabled: Ref<boolean | undefined>\n        useIndexAsValue: boolean\n      },\n      cmp: ComponentInternalInstance,\n    ) => void\n    unregister: (id: number) => void\n    select: (id: number, value: boolean) => void\n    selected: Ref<readonly number[]>\n    isSelected: (id: number) => boolean\n    prev: () => void\n    next: () => void\n    selectedClass: Ref<string | undefined>\n    items: ComputedRef<\n      { id: number; value: unknown; disabled: boolean | undefined }[]\n    >\n    disabled: Ref<boolean | undefined>\n    getItemIndex: (value: unknown) => number\n  }\n}"
    },
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "默认的 Vue 插槽。",
      "params": "{\n  group: {\n    register: (\n      item: {\n        id: number\n        value: Ref<unknown>\n        disabled: Ref<boolean | undefined>\n        useIndexAsValue: boolean\n      },\n      cmp: ComponentInternalInstance,\n    ) => void\n    unregister: (id: number) => void\n    select: (id: number, value: boolean) => void\n    selected: Ref<readonly number[]>\n    isSelected: (id: number) => boolean\n    prev: () => void\n    next: () => void\n    selectedClass: Ref<string | undefined>\n    items: ComputedRef<\n      { id: number; value: unknown; disabled: boolean | undefined }[]\n    >\n    disabled: Ref<boolean | undefined>\n    getItemIndex: (value: unknown) => number\n  }\n}"
    },
    {
      "name": "item",
      "description": "Define a custom item appearance.",
      "description_zh": "定义自定义项外观。",
      "params": "{\n  props: Record<string, any>\n  item: { id: number; value: unknown; disabled: boolean }\n}"
    },
    {
      "name": "next",
      "description": "Slot displaying the arrow switching to the next item.",
      "description_zh": "显示切换到下一项的箭头的插槽。",
      "params": "{\n  props: {\n    icon:\n      | string\n      | (string | [string, number])[]\n      | (new () => any)\n      | FunctionalComponent\n    class: string\n    onClick: () => void\n    'aria-label': string\n  }\n}"
    },
    {
      "name": "prev",
      "description": "Slot displaying the arrow switching to the previous item.",
      "description_zh": "显示切换到上一项的箭头的插槽。",
      "params": "{\n  props: {\n    icon:\n      | string\n      | (string | [string, number])[]\n      | (new () => any)\n      | FunctionalComponent\n    class: string\n    onClick: () => void\n    'aria-label': string\n  }\n}"
    }
  ],
  "suggestions": [
    "v-carousel-item"
  ]
}
