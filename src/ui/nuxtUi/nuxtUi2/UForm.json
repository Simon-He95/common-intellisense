{
  "name": "UForm",
  "methods": [],
  "events": [
    {
      "name": "submit",
      "params": "",
      "description": "",
      "description_zh": "",
      "value": ""
    },
    {
      "name": "input",
      "params": "",
      "description": "",
      "description_zh": "",
      "value": ""
    },
    {
      "name": "blur",
      "params": "",
      "description": "",
      "description_zh": "",
      "value": ""
    },
    {
      "name": "change",
      "params": "",
      "description": "",
      "description_zh": "",
      "value": ""
    },
    {
      "name": "error",
      "params": "",
      "description": "",
      "description_zh": "",
      "value": ""
    }
  ],
  "props": {
    ":state": {
      "type": "Record<string, any>",
      "default": "",
      "value": "",
      "required": true,
      "description": "a reactive object that holds the current state of the form.",
      "description_zh": "保存窗体当前状态的反应式对象。"
    },
    ":schema": {
      "type": "ZodType<any, ZodTypeDef, any> | ObjectSchema<any, AnyObject, any> | AnySchema<any> | ObjectSchemaAsync<any>",
      "default": "undefined",
      "value": "",
      "description": "You can provide a schema from Yup, Zod or Joi, Valibot through the schema prop to validate the state.",
      "description_zh": "您可以通过 schema prop 提供来自 Yup、Zod 或 Joi、Valibot 的架构来验证状态。"
    },
    ":validate": {
      "type": "((state: any) => Promise<FormError<string>[]>) | ((state: any) => FormError<string>[])",
      "default": "[]",
      "value": "",
      "description": "",
      "description_zh": ""
    },
    "validateOn": {
      "type": "FormEventType[]",
      "default": "[\"blur\", \"input\", \"change\", \"submit\"]",
      "value": [
        "blur",
        "input",
        "change",
        "submit"
      ],
      "description": "",
      "description_zh": ""
    }
  },
  "suggestions": [
    "UFormGroup",
    "UButton"
  ],
  "link": "https://ui.nuxt.com/elements/form",
  "link_zh": "https://ui.nuxt.com/elements/form"
}
