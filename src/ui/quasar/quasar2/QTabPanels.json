{
  "name": "QTabPanels",
  "methods": [
    {
      "name": "next",
      "description": "Go to next panel",
      "description_zh": "转到下一个面板",
      "params": "",
      "value": ""
    },
    {
      "name": "previous",
      "description": "Go to previous panel",
      "description_zh": "转到上一个面板",
      "params": "",
      "value": ""
    },
    {
      "name": "goTo",
      "description": "Go to specific panel",
      "description_zh": "转到特定面板",
      "params": "(panelName: String,Number) => void",
      "value": ""
    }
  ],
  "events": [
    {
      "name": "update:model-value",
      "description": "Emitted when the component changes the model; This event _isn't_ fired if the model is changed externally; Is also used by v-model",
      "description_zh": "当组件更改模型时发出;如果模型_isn外部更改，则t_触发此事件;也被 v-model 使用",
      "params": "(value: String,Number) => void",
      "value": ""
    },
    {
      "name": "before-transition",
      "description": "Emitted before transitioning to a new panel",
      "description_zh": "在过渡到新面板之前发出",
      "params": "(newVal: String,Number, oldVal: String,Number) => void",
      "value": ""
    },
    {
      "name": "transition",
      "description": "Emitted after component transitioned to a new panel",
      "description_zh": "在组件过渡到新面板后发出",
      "params": "(newVal: String,Number, oldVal: String,Number) => void",
      "value": ""
    }
  ],
  "props": {
    "dark": {
      "value": "",
      "type": "String",
      "description": "",
      "description_zh": "",
      "default": "",
      "required": false,
      "extends": "dark"
    },
    "v-model": {
      "value": "",
      "type": "Any",
      "description": "Model of the component defining the current panel's name; If a Number is used, it does not define the panel's index, but rather the panel's name which can also be an Integer; Either use this property (along with a listener for 'update:model-value' event) OR use the v-model directive.",
      "description_zh": "定义当前面板名称的组件的模型;如果使用 Number ，则它不会定义面板的索引，而是定义面板的名称，该名称也可以是 Integer ;使用此属性（以及 'update：model-value' 事件的侦听器）或使用 v-model 指令。",
      "default": "",
      "required": true
    },
    "keep-alive": {
      "value": "",
      "type": "Boolean",
      "description": "Equivalent to using Vue's native <keep-alive> component on the content",
      "description_zh": "相当于<keep-alive>在内容上使用 Vue 的原生组件",
      "default": "false",
      "required": false
    },
    "keep-alive-include": {
      "value": "",
      "type": "String | Array | RegExp",
      "description": "Equivalent to using Vue's native include prop for <keep-alive>; Values must be valid Vue component names",
      "description_zh": "相当于使用 Vue 的原生 include prop <keep-alive>for ;值必须是有效的 Vue 组件名称",
      "default": "",
      "required": false
    },
    "keep-alive-exclude": {
      "value": "",
      "type": "String | Array | RegExp",
      "description": "Equivalent to using Vue's native exclude prop for <keep-alive>; Values must be valid Vue component names",
      "description_zh": "相当于使用 Vue 的原生 exclude prop <keep-alive>for ;值必须是有效的 Vue 组件名称",
      "default": "",
      "required": false
    },
    "keep-alive-max": {
      "value": "",
      "type": "Number",
      "description": "Equivalent to using Vue's native max prop for <keep-alive>",
      "description_zh": "相当于使用 Vue 的原生 max prop for <keep-alive>",
      "default": "",
      "required": false
    },
    "animated": {
      "value": "",
      "type": "Boolean",
      "description": "Enable transitions between panel (also see 'transition-prev' and 'transition-next' props)",
      "description_zh": "启用面板之间的过渡（另见 'transition-prev' 和 'transition-next' 属性）",
      "default": "false",
      "required": false
    },
    "infinite": {
      "value": "",
      "type": "Boolean",
      "description": "Makes component appear as infinite (when reaching last panel, next one will become the first one)",
      "description_zh": "使组件显示为无限（当到达最后一个面板时，下一个面板将成为第一个面板）",
      "default": "false",
      "required": false
    },
    "swipeable": {
      "value": "",
      "type": "Boolean",
      "description": "Enable swipe events (may interfere with content's touch/mouse events)",
      "description_zh": "启用滑动事件（可能会干扰内容的触摸/鼠标事件）",
      "default": "false",
      "required": false
    },
    "vertical": {
      "value": "",
      "type": "Boolean",
      "description": "Default transitions and swipe actions will be on the vertical axis",
      "description_zh": "默认过渡和滑动操作将位于纵轴上",
      "default": "false",
      "required": false
    },
    "transition-prev": {
      "value": "",
      "type": "String",
      "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)",
      "description_zh": "Quasar 的嵌入式过渡之一（仅在设置了 'animated' prop 时有效）",
      "default": "# slide-right/slide-down",
      "required": false,
      "extends": "transition",
      "desc": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)",
      "__runtimeDefault": true,
      "category": "transition"
    },
    "transition-next": {
      "value": "",
      "type": "String",
      "description": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)",
      "description_zh": "Quasar 的嵌入式过渡之一（仅在设置了 'animated' prop 时有效）",
      "default": "# slide-left/slide-up",
      "required": false,
      "extends": "transition",
      "desc": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)",
      "__runtimeDefault": true,
      "category": "transition"
    },
    "transition-duration": {
      "value": "",
      "type": "String | Number",
      "description": "Transition duration (in milliseconds, without unit)",
      "description_zh": "过渡持续时间（以毫秒为单位，不含单位）",
      "default": "300",
      "version": "v2.2",
      "required": false
    }
  },
  "link": "https://v2.quasar.dev/vue-components/tab-panels",
  "link_zh": "https://v2.quasar.dev/vue-components/tab-panels",
  "slots": [
    {
      "name": "default",
      "description": "",
      "description_zh": ""
    }
  ],
  "suggestions": [
    "q-tab-panel"
  ]
}
